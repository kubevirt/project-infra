#!/bin/bash

readonly IP=169.255.0.0
readonly SUBNET_MASK=24
readonly GW_IP=169.255.0.1
readonly CONTAINER_NETNS_LINK="/var/run/netns/$CNI_CONTAINERID"
readonly LOGFILE=/var/log/pfcni.log
readonly PF_COUNT=1
readonly SYSTEM_RESERVED_PFS_LIST_FILE="/etc/pfscni-system-reserved-interfaces"

function main() {
    case "$CNI_COMMAND" in
        ADD)
            log "Received ADD command. CNI_ARGS: $CNI_ARGS"
            setup_netns
            setns_sriov_pfs
            gen_result_config
            ;;
        DELETE)
            log "Received DELETE command."
            ip netns del "$CNI_CONTAINERID" ||:
            ;;
    esac
}

function setup_netns() {
    mkdir -p /var/run/netns
    ln -sfT "$CNI_NETNS" "$CONTAINER_NETNS_LINK"
}

function setns_sriov_pfs() {
  local pf_array=()
  local -r sriov_pfs=( $(find /sys/class/net/*/device/sriov_numvfs) )
  if [ "${#sriov_pfs[@]}" -eq 0 ]; then
    log "FATAL: No sriov PFs found"
    exit 1
  fi

  for pf in "${sriov_pfs[@]}"; do
    local pf_name="${pf%%/device/*}"
    pf_name="${pf_name##*/}"

    if reserved_pf "${pf_name}"; then
      continue
    fi

    if ip link set "$pf_name" netns "$CNI_CONTAINERID"; then
      if timeout 5s bash -c "until ip netns exec $CNI_CONTAINERID ip link show $pf_name > /dev/null; do sleep 1; done"; then
        log "Added $pf_name to netns $CNI_CONTAINERID"
        pf_array+=("$pf_name")
        if [ "${#pf_array[@]}" -eq "$PF_COUNT" ]; then
          log "Allocated requested number of PFs"
          return 0
        fi
      fi
    fi
  done

  log "FATAL: Could not allocate enough PFs"
  exit 1
}

function reserved_pf() {
    local -r pf=$1
    if [ -f "${SYSTEM_RESERVED_PFS_LIST_FILE}" ]; then
        grep -w -q ${pf} ${SYSTEM_RESERVED_PFS_LIST_FILE}
    fi
}

function gen_result_config() {
  local mac
  mac="$(
    ip netns exec "$CNI_CONTAINERID" ip link show "$CNI_IFNAME" | \
        grep link | awk '{print $2}')"

  tee -a "$LOGFILE" <<-EOF
    {
        "cniVersion": "0.3.1",
        "interfaces": [
          {
            "name":"$CNI_IFNAME",
            "mac": "$mac",
            "sandbox": "$CNI_NETNS"
          }
        ],
        "ips": [
          {
            "version": "4",
            "address": "$IP/$SUBNET_MASK",
            "interface": 0
          }
        ]
    }
EOF
}

function log {
    echo "[$(date --rfc-3339=seconds)]: $*" >> "$LOGFILE"
}

main "$@"
