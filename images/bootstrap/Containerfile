# Copyright 2017 The Kubernetes Authors.
# Copyright 2021 The KubeVirt Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Includes basic workspace setup, with gcloud and a bootstrap runner
FROM fedora:41

WORKDIR /workspace
RUN mkdir -p /workspace
ENV WORKSPACE=/workspace \
    TERM=xterm

# add env we can debug with the image name:tag
ARG IMAGE_ARG
ENV IMAGE=${IMAGE_ARG}
ARG ARCH

# Install packages
RUN dnf install -y \
    bind-utils \
    buildah \
    cpio \
    dnf-plugins-core \
    findutils \
    fuse-overlayfs \
    gcc \
    gcc-c++ \
    gettext \
    git \
    glibc-devel \
    glibc-static \
    iproute \
    java-11-openjdk-devel \
    jq \
    libstdc++-static \
    libvirt-devel \
    make \
    mercurial \
    openssl \
    patch \
    procps-ng \
    protobuf-compiler \
    python3-devel \
    python3-jinja2 \
    python-unversioned-command \
    qemu-user-static \
    redhat-rpm-config \
    ripgrep \
    rsync \
    rsync-daemon \
    skopeo \
    sudo \
    wget \
    which && \
  dnf -y clean all


RUN if test "${ARCH}" != s390x; then \
        export PATH=/google-cloud-sdk/bin:/workspace:${PATH} && \
        export CLOUDSDK_CORE_DISABLE_PROMPTS=1 && \
        wget -q https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.tar.gz && \
        tar xzf google-cloud-sdk.tar.gz -C / && \
        rm google-cloud-sdk.tar.gz && \
        /google-cloud-sdk/install.sh \
            --disable-installation-options \
            --bash-completion=false \
            --path-update=false \
            --usage-reporting=false && \
        gcloud components install alpha beta kubectl && \
        gcloud info | tee /workspace/gcloud-info.txt; \
        # Cache the most commonly used bazel versions in the container
        curl -Lo ./bazelisk https://github.com/bazelbuild/bazelisk/releases/download/v1.17.0/bazelisk-linux-${ARCH} && \
        chmod +x ./bazelisk && mv ./bazelisk /usr/local/bin/bazelisk && \
        cd /usr/local/bin && ln -s bazelisk bazel; \

        # Cache the most commonly used bazel versions inside the image
        # and remove resulting cache directories to save a few hundred MB
        USE_BAZEL_VERSION=5.3.1 bazel version && \
        USE_BAZEL_VERSION=5.4.1 bazel version && \
        rm -rf /root/.cache/bazel; \
    fi

# As gcloud isn't supported on s390x, rather than installing kubectl via gcloud as in above RUN,
# we are installing its binary as described in the kubernetes official docs.
RUN if test "${ARCH}" == s390x; then \
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/s390x/kubectl" && \
        install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && \
        rm -f kubectl && \
        kubectl version --client; \
    fi

#
# BEGIN: PODMAN IN CONTAINER SETUP
#

RUN dnf -y update; dnf -y reinstall shadow-utils && \
    dnf -y install crun podman --exclude container-selinux && \
    dnf -y clean all && \
    ln -s /usr/bin/podman /usr/bin/docker

VOLUME /var/lib/containers

COPY storage.conf /etc/containers/storage.conf
RUN mkdir -p /var/lib/shared-images

COPY containers.conf /etc/containers/containers.conf
COPY podman.json /etc/containers/networks/podman.json

RUN chmod 644 /etc/containers/containers.conf
#
# END: PODMAN IN CONTAINER SETUP
#


# create mixin directories
RUN mkdir -p /etc/setup.mixin.d/ && mkdir -p /etc/teardown.mixin.d/

# Trust git repositories used for e2e jobs
RUN git config --global --add safe.directory '*'

# note the runner is also responsible for making podman in container function if
# env PODMAN_IN_CONTAINER_ENABLED is set and similarly responsible for generating

# .bazelrc files if bazel remote caching is enabled
COPY ["entrypoint.sh", "gcs_restapi.sh", "runner.sh", "create_bazel_cache_rcs.sh", \
        "/usr/local/bin/"]

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
