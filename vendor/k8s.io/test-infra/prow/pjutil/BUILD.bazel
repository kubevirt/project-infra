package(default_visibility = ["//visibility:public"])

licenses(["notice"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_library",
)

go_library(
    name = "go_default_library",
    srcs = [
        "abort.go",
        "filter.go",
        "health.go",
        "pjutil.go",
        "pprof.go",
        "tot.go",
        "trigger.go",
    ],
    importmap = "kubevirt.io/project-infra/vendor/k8s.io/test-infra/prow/pjutil",
    importpath = "k8s.io/test-infra/prow/pjutil",
    deps = [
        "//vendor/github.com/bwmarrin/snowflake:go_default_library",
        "//vendor/github.com/evanphx/json-patch:go_default_library",
        "//vendor/github.com/satori/go.uuid:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/fields:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/types:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/sets:go_default_library",
        "//vendor/k8s.io/test-infra/prow/apis/prowjobs/v1:go_default_library",
        "//vendor/k8s.io/test-infra/prow/client/clientset/versioned/typed/prowjobs/v1:go_default_library",
        "//vendor/k8s.io/test-infra/prow/config:go_default_library",
        "//vendor/k8s.io/test-infra/prow/crier/reporters/github:go_default_library",
        "//vendor/k8s.io/test-infra/prow/flagutil:go_default_library",
        "//vendor/k8s.io/test-infra/prow/gcsupload:go_default_library",
        "//vendor/k8s.io/test-infra/prow/github:go_default_library",
        "//vendor/k8s.io/test-infra/prow/interrupts:go_default_library",
        "//vendor/k8s.io/test-infra/prow/kube:go_default_library",
        "//vendor/k8s.io/test-infra/prow/pod-utils/decorate:go_default_library",
        "//vendor/k8s.io/test-infra/prow/pod-utils/downwardapi:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/client:go_default_library",
        "//vendor/sigs.k8s.io/yaml:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
)
