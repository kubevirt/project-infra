package(default_visibility = ["//visibility:public"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_library",
)

go_library(
    name = "go_default_library",
    srcs = [
        "cluster.go",
        "config.go",
        "constants.go",
        "metrics.go",
        "prowjob.go",
        "ratelimiter.go",
    ],
    importmap = "kubevirt.io/project-infra/vendor/k8s.io/test-infra/prow/kube",
    importpath = "k8s.io/test-infra/prow/kube",
    deps = [
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
        "//vendor/golang.org/x/time/rate:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/plugin/pkg/client/auth:go_default_library",
        "//vendor/k8s.io/client-go/rest:go_default_library",
        "//vendor/k8s.io/client-go/tools/clientcmd:go_default_library",
        "//vendor/k8s.io/client-go/util/workqueue:go_default_library",
        "//vendor/k8s.io/test-infra/prow/apis/prowjobs/v1:go_default_library",
        "//vendor/k8s.io/test-infra/prow/client/clientset/versioned:go_default_library",
        "//vendor/k8s.io/test-infra/prow/version:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
)
