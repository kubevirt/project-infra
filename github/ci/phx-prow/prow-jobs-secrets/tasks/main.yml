---
- name: Create Docker-kubevirtbot secret
  k8s:
    context: '{{ targetContext }}'
    kubeconfig: '{{ automationKubeconfig }}'
    state: present
    namespace: "{{ targetNamespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: kubevirtci-docker-credential
      type: Opaque
      data:
        username: "{{ dockerUser | b64encode }}"
        password: "{{ dockerPass | b64encode }}"
- name: Create Quay-kubevirtbot secret
  k8s:
    kubeconfig: '{{ automationKubeconfig }}'
    context: '{{ targetContext }}'
    state: present
    namespace: "{{ targetNamespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: kubevirtci-quay-credential
      type: Opaque
      data:
        username: "{{ quayUser | b64encode }}"
        password: "{{ quayPass | b64encode }}"
- name: Create OKD installer pull token secret
  k8s:
    kubeconfig: '{{ automationKubeconfig }}'
    context: '{{ targetContext }}'
    state: present
    namespace: "{{ targetNamespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: kubevirtci-installer-pull-token
      type: Opaque
      data:
        token: "{{ installerPullToken | b64encode }}"
- name: Create OAuth secret in prow jobs namespace
  k8s:
    kubeconfig: '{{ automationKubeconfig }}'
    context: '{{ targetContext }}'
    state: present
    namespace: "{{ targetNamespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: oauth-token
      type: Opaque
      data:
        oauth: "{{ githubToken | b64encode }}"
- name: Create OAuth commenter secret in prow jobs namespace
  k8s:
    kubeconfig: '{{ automationKubeconfig }}'
    context: '{{ targetContext }}'
    state: present
    namespace: "{{ targetNamespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: commenter-oauth-token
      type: Opaque
      data:
        oauth: "{{ githubCommenterToken | b64encode }}"
- name: Create GCS service account config in prow jobs namespace
  k8s:
    kubeconfig: '{{ automationKubeconfig }}'
    context: '{{ targetContext }}'
    state: present
    namespace: "{{ targetNamespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: gcs
      type: Opaque
      data:
        service-account.json: "{{ gcsServiceAccount | b64encode }}"
- name: Create coveralls.io api token
  k8s:
    context: '{{ targetContext }}'
    kubeconfig: '{{ automationKubeconfig }}'
    state: present
    namespace: "{{ targetNamespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: kubevirtci-coveralls-token
      type: Opaque
      data:
        token: "{{ coverallsToken | b64encode }}"
- name: Create PGP bot key secret
  k8s:
    context: '{{ targetContext }}'
    kubeconfig: '{{ automationKubeconfig }}'
    state: present
    namespace: "{{ targetNamespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: pgp-bot-key
      type: Opaque
      data:
        token: "{{ kubevirtBotPGP.privateKey | b64encode }}"
