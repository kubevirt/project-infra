plank:
  job_url_template: 'https://prow.ci.kubevirt.io/view/gs/kubevirt-prow/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if .Spec.Refs}}{{if ne .Spec.Refs.Org ""}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  job_url_prefix_config:
    '*':  https://prow.ci.kubevirt.io/view/
  pod_pending_timeout: 60m
  pod_unscheduled_timeout: 24h
  default_decoration_configs:
    '*':
      timeout: 2h
      grace_period: 15s
      utility_images:
        clonerefs: "gcr.io/k8s-prow/clonerefs:v20240723-dbbd2d86b"
        initupload: "gcr.io/k8s-prow/initupload:v20240723-dbbd2d86b"
        entrypoint: "gcr.io/k8s-prow/entrypoint:v20240723-dbbd2d86b"
        sidecar: "gcr.io/k8s-prow/sidecar:v20240723-dbbd2d86b"
      gcs_configuration:
        bucket: "kubevirt-prow"
        path_strategy: "explicit"
      gcs_credentials_secret: "gcs"

deck:
  spyglass:
    size_limit: 500000000 # 500MB
    gcs_browser_prefix: https://gcsweb.ci.kubevirt.io/gcs/
    testgrid_config: gs://k8s-testgrid/config
    testgrid_root: https://testgrid.k8s.io/
    lenses:
    - lens:
        name: metadata
      required_files:
      - started.json|finished.json
      optional_files:
      - podinfo.json
    - lens:
        name: buildlog
        config:
          highlight_regexes:
          # default patterns, see https://github.com/kubernetes/test-infra/blob/e7ccf79861d3c53dfaa6c784c0c8537922c4c0cc/prow/spyglass/lenses/buildlog/lens.go#L95
          - ^E\d{4} \d\d:\d\d:\d\d\.\d+
          - "(Error|ERROR|error)s?:"
          - (FAIL|Failure \[)\b
          - "timed out"
          - panic\b
          # own patterns
          - \[FAILED\]
          - "fatal: "
      required_files:
        - build-log.txt
    - lens:
        name: junit
      required_files:
        - artifacts/junit.*\.xml
    - lens:
        name: coverage
      required_files:
        - artifacts/filtered.cov
      optional_files:
        - artifacts/filtered.html
    - lens:
        name: podinfo
      required_files:
        - podinfo.json
    - lens:
        name: restcoverage
        config:
          threshold_warning: 50
          threshold_error: 10
      required_files:
        - artifacts/rest-coverage.json
  tide_update_period: 1s
  rerun_auth_configs:
    '*':
      github_team_ids:
        - 3701123 # prow-job-taskforce

sinker:
  resync_period: 1m
  max_prowjob_age: 48h
  max_pod_age: 30m
  terminated_pod_ttl: 2h

prowjob_namespace: kubevirt-prow-jobs
pod_namespace: kubevirt-prow-jobs
log_level: debug

tide:
  sync_period: 2m
  merge_method:
    kubevirt/libguestfs-appliance: merge
    kubevirt/containerized-data-importer: squash
    kubevirt/cluster-api-provider-kubevirt: merge
    kubevirt/containerdisks: merge
    kubevirt/kubevirt: merge
    kubevirt/machine-remediation-operator: squash
    kubevirt/project-infra: squash
    kubevirt/kubevirtci: squash
    kubevirt/kubevirt.github.io: squash
    kubevirt/cloud-image-builder: squash
    kubevirt/kubevirt-tutorial: squash
    kubevirt/community: squash
    kubevirt/hostpath-provisioner: squash
    kubevirt/hostpath-provisioner-operator: squash
    kubevirt/katacoda-scenarios: squash
    kubevirt/demo: squash
    k8snetworkplumbingwg/ovs-cni: squash
    kubevirt/macvtap-cni: merge
    kubevirt/cluster-network-addons-operator: squash
    kubevirt/kubesecondarydns: merge
    kubevirt/ipam-extensions: merge
    kubevirt/bridge-marker: squash
    nmstate/kubernetes-nmstate: squash
    k8snetworkplumbingwg/kubemacpool: squash
    kubevirt/kubectl-virt-plugin: squash
    kubevirt/node-maintenance-operator: merge
    kubevirt/ansible-kubevirt-modules: squash
    kubevirt/hyperconverged-cluster-operator: squash
    kubevirt/common-instancetypes: merge
    kubevirt/common-templates: merge
    kubevirt/kvm-info-nfd-plugin: squash
    kubevirt/cpu-nfd-plugin: squash
    kubevirt/node-labeller: squash
    kubevirt/kubevirt-template-validator: squash
    kubevirt/kubevirt-ssp-operator: squash
    kubevirt/kubevirt-tekton-tasks: merge
    kubevirt/csi-driver: squash
    kubevirt/ssp-operator: merge
    kubevirt/managed-tenant-quota: merge
    kubevirt/application-aware-quota: merge
    kubevirt/must-gather: squash
    kubevirt/user-guide: squash
    kubevirt/terraform-provider-kubevirt: merge
    kubevirt/kubevirt-velero-plugin: squash
    kubevirt/qe-tools: merge
    kubevirt/cloud-provider-kubevirt: merge
    kubevirt/secrets: merge
    kubevirt/test-benchmarks: merge
    kubevirt/vm-console-proxy: merge
    kubevirt/sig-release: merge
    kubevirt/kubevirt.core: merge

  queries:
  - repos:
    - kubevirt/libguestfs-appliance
    - kubevirt/project-infra
    - kubevirt/kubesecondarydns
    - kubevirt/ipam-extensions
    - kubevirt/cluster-api-provider-kubevirt
    - kubevirt/machine-remediation-operator
    - kubevirt/kubevirtci
    - kubevirt/kubevirt.github.io
    - kubevirt/cloud-image-builder
    - kubevirt/kubevirt-tutorial
    - kubevirt/community
    - kubevirt/katacoda-scenarios
    - kubevirt/demo
    - kubevirt/kubectl-virt-plugin
    - kubevirt/user-guide
    - kubevirt/terraform-provider-kubevirt
    - kubevirt/kubevirt-velero-plugin
    - kubevirt/qe-tools
    - kubevirt/cloud-provider-kubevirt
    - kubevirt/secrets
    - kubevirt/test-benchmarks
    - kubevirt/sig-release
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/work-in-progress
    - needs-rebase
    - "dco-signoff: no"
  - repos:
    - kubevirt/containerdisks
    - kubevirt/kubevirt
    - kubevirt/containerized-data-importer
    - kubevirt/hostpath-provisioner
    - kubevirt/hostpath-provisioner-operator
    - k8snetworkplumbingwg/ovs-cni
    - kubevirt/macvtap-cni
    - kubevirt/cluster-network-addons-operator
    - kubevirt/bridge-marker
    - nmstate/kubernetes-nmstate
    - k8snetworkplumbingwg/kubemacpool
    - kubevirt/node-maintenance-operator
    - kubevirt/ansible-kubevirt-modules
    - kubevirt/hyperconverged-cluster-operator
    - kubevirt/common-instancetypes
    - kubevirt/common-templates
    - kubevirt/kvm-info-nfd-plugin
    - kubevirt/cpu-nfd-plugin
    - kubevirt/node-labeller
    - kubevirt/kubevirt-template-validator
    - kubevirt/kubevirt-ssp-operator
    - kubevirt/ssp-operator
    - kubevirt/kubevirt-tekton-tasks
    - kubevirt/managed-tenant-quota
    - kubevirt/application-aware-quota
    - kubevirt/must-gather
    - kubevirt/csi-driver
    - kubevirt/vm-console-proxy
    - kubevirt/kubevirt.core
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/work-in-progress
    - do-not-merge/release-note-label-needed
    - do-not-merge/invalid-commit-message
    - needs-rebase
    - "dco-signoff: no"
  pr_status_base_urls:
    '*': https://prow.ci.kubevirt.io/pr
  context_options:
    orgs:
      kubevirt:
        repos:
          dashboard:
            skip-unknown-contexts: true
            from-branch-protection: true
      nmstate:
        repos:
          kubernetes-nmstate:
            skip-unknown-contexts: true
  priority:
  - labels: [ "kind/flake", "priority/critical-urgent" ]
  - labels: [ "kind/failing-test", "priority/critical-urgent" ]
  - labels: [ "kind/bug", "priority/critical-urgent" ]

slack_reporter_configs:
  '*':
    job_types_to_report:
      - postsubmit
      - periodic
    job_states_to_report:
      - failure
      - error
    channel: kubevirt-ci-monitoring
    # The template shown below is the default
    report_template: 'Job {{.Spec.Job}} of type {{.Spec.Type}} ended with state {{.Status.State}}. <{{.Status.URL}}|View logs>'

  'kubevirt/kubevirt-tutorial':
    job_types_to_report:
      - postsubmit
      - periodic
      - batch
    job_states_to_report:
      - failure
      - error
    channel: eko
    # The template shown below is the default
    report_template: 'Job {{.Spec.Job}} of type {{.Spec.Type}} ended with state {{.Status.State}}. <{{.Status.URL}}|View logs>'

  'kubevirt/kubevirt.github.io':
    job_types_to_report:
      - postsubmit
      - periodic
      - batch
    job_states_to_report:
      - failure
      - error
    channel: eko
    # The template shown below is the default
    report_template: 'Job {{.Spec.Job}} of type {{.Spec.Type}} ended with state {{.Status.State}}. <{{.Status.URL}}|View logs>'

branch-protection:
  required_status_checks:
    contexts:
    - dco
  orgs:
    kubevirt:
      repos:
        kubevirt:
          protect: true
          branches:
            main:
              require_manually_triggered_jobs: true
            release-0.33:
              required_status_checks:
                contexts:
                  - continuous-integration/travis-ci/pr
            release-0.32:
              required_status_checks:
                contexts:
                  - continuous-integration/travis-ci/pr
            release-0.31:
              required_status_checks:
                contexts:
                  - continuous-integration/travis-ci/pr
            release-0.30:
              required_status_checks:
                contexts:
                  - continuous-integration/travis-ci/pr
            release-0.29:
              required_status_checks:
                contexts:
                  - continuous-integration/travis-ci/pr
            release-0.28:
              required_status_checks:
                contexts:
                  - continuous-integration/travis-ci/pr
            release-0.27:
              required_status_checks:
                contexts:
                  - continuous-integration/travis-ci/pr
            release-0.26:
              required_status_checks:
                contexts:
                  - continuous-integration/travis-ci/pr
            release-0.25:
              required_status_checks:
                contexts:
                  - continuous-integration/travis-ci/pr
            release-0.24:
              required_status_checks:
                contexts:
                  - continuous-integration/travis-ci/pr
            release-0.23:
              required_status_checks:
                contexts:
                  - continuous-integration/travis-ci/pr
        project-infra:
          branches:
            main:
              protect: true
        containerdisks:
          branches:
            main:
              protect: true
        libguestfs-appliance:
          branches:
            main:
              protect: true
        kubevirtci:
          branches:
            main:
              protect: true
        containerized-data-importer:
          branches:
            main:
              protect: true
        managed-tenant-quota:
          branches:
            main:
              protect: true
        application-aware-quota:
          branches:
            main:
              protect: true
        cluster-api-provider-kubevirt:
          branches:
            main:
              protect: true
        kubevirt-velero-plugin:
          branches:
            main:
              protect: true
        hyperconverged-cluster-operator:
          branches:
            main:
              protect: true
            release-1.2:
              protect: true
              required_status_checks:
                contexts:
                  - continuous-integration/travis-ci/pr
            release-1.3:
              protect: true
            release-1.4:
              protect: true
        cluster-network-addons-operator:
          branches:
            main:
              protect: true
            release-0.27:
              protect: true
            release-0.39:
              protect: true
        macvtap-cni:
          branches:
            main:
              protect: true
        common-instancetypes:
          protect: true
        common-templates:
          branches:
            master:
              protect: true
        hostpath-provisioner:
          branches:
            master:
              protect: true
        hostpath-provisioner-operator:
          branches:
            master:
              protect: true
        csi-driver:
          branches:
            main:
              protect: true
        kubectl-virt-plugin:
          protect: true
        node-maintenance-operator:
          branches:
            master:
              protect: true
              required_status_checks:
                contexts:
                  # these are from OpenshiftCI!
                  - ci/prow/images
                  - ci/prow/openshift-e2e
        community:
          branches:
            main:
              protect: true
        user-guide:
          branches:
            main:
              protect: true
            gh-pages:
              protect: true
            source:
              protect: true
        terraform-provider-kubevirt:
          branches:
            main:
              protect: true
        qe-tools:
          protect: true
        cloud-provider-kubevirt:
          branches:
            main:
              protect: true
        kubesecondarydns:
          branches:
            main:
              protect: true
        ipam-extensions:
          branches:
            main:
              protect: true
        sig-release:
          branches:
            main:
              protect: true
        kubevirt.core:
          branches:
            main:
              protect: true
              required_status_checks:
                # Disable status checks so the Ansible Middleware
                # release automation is able to run
                contexts: []
        vm-console-proxy:
          protect: true
        ssp-operator:
          branches:
            main:
              protect: true
        kubevirt-tekton-tasks:
          branches:
            main:
              protect: true
    k8snetworkplumbingwg:
      repos:
        kubemacpool:
          branches:
            master:
              protect: true
        ovs-cni:
          branches:
            main:
              protect: true
    nmstate:
      repos:
        kubernetes-nmstate:
          protect: true

push_gateway:
  endpoint: pushgateway
  serve_metrics: true

presets:
- labels:
    preset-dind-enabled: "true"
  env:
  - name: DOCKER_IN_DOCKER_ENABLED
    value: "true"
  volumes:
  - name: docker-graph
    emptyDir: {}
  volumeMounts:
  - name: docker-graph
    mountPath: /docker-graph
- labels:
    preset-podman-in-container-enabled: "true"
  env:
  - name: PODMAN_IN_CONTAINER_ENABLED
    value: "true"
  volumes:
  - name: modules
    hostPath:
      path: /lib/modules
      type: Directory
  - name: podman-data
    emptyDir: {}
  volumeMounts:
  - name: podman-data
    mountPath: /var/lib/containers
  - name: modules
    mountPath: /lib/modules
    readOnly: true
- labels:
    preset-podman-shared-images: "true"
  volumes:
  - name: podman-shared-images
    hostPath:
      path: /var/lib/shared-images
      type: Directory
  volumeMounts:
  - name: podman-shared-images
    mountPath: /var/lib/shared-images
    readOnly: true
- labels:
    preset-docker-mirror: "true"
  volumes:
  - name: docker-config
    configMap:
      name: docker-daemon-mirror-config
  volumeMounts:
  - name: docker-config
    mountPath: /etc/default
    readOnly: true
- labels:
    preset-docker-mirror-proxy: "true"
  env:
  - name: CA_CERT_FILE
    value: /etc/docker-mirror-proxy/ca.crt
  - name: CONTAINER_HTTP_PROXY
    value: http://docker-mirror-proxy.kubevirt-prow.svc:3128
  - name: CONTAINER_HTTPS_PROXY
    value: http://docker-mirror-proxy.kubevirt-prow.svc:3128
  volumes:
  - name: docker-mirror-proxy-ca-cert
    configMap:
      name: mirror-proxy-config
  - name: docker-config
    configMap:
      name: docker-daemon-mirror-config
      items:
      - key: "docker-proxy"
        path: "docker"
  volumeMounts:
  - name: docker-mirror-proxy-ca-cert
    mountPath: /etc/docker-mirror-proxy
    readOnly: true
  - name: docker-config
    mountPath: /etc/default
    readOnly: true
- labels:
    preset-shared-images: "true"
  volumes:
  - name: shared-iso
    hostPath:
      path: /var/lib/stdci/shared/kubevirt-images/
      type: DirectoryOrCreate
  volumeMounts:
  - name: shared-iso
    mountPath: /var/lib/stdci/shared/kubevirt-images/
- labels:
    preset-kubevirtci-docker-credential: "true"
  env:
    - name: DOCKER_USER
      value: /etc/kubevirtci-cred/username
    - name: DOCKER_PASSWORD
      value: /etc/kubevirtci-cred/password
  volumes:
    - name: kubevirtci-cred
      secret:
        defaultMode: 0400
        secretName: kubevirtci-docker-credential
  volumeMounts:
    - name: kubevirtci-cred
      mountPath: /etc/kubevirtci-cred
      readOnly: true
- labels:
    preset-bazel-cache: "true"
  env:
    - name: BAZEL_VERSION
      value: "5.4.1"
    - name: CACHE_HOST
      value: bazel-cache.kubevirt-prow
    - name: CACHE_PORT
      value: "8080"
    - name: BAZEL_REMOTE_CACHE_ENABLED
      value: "true"
- labels:
    preset-bazel-unnested: "true"
  env:
    - name: KUBEVIRT_RUN_UNNESTED
      value: "true"
  volumes:
  - name: bazeluserroot
    emptyDir: {}
  volumeMounts:
  - name: bazeluserroot
    mountPath: /tmp/cache/bazel
- labels:
    preset-kubevirtci-quay-credential: "true"
  env:
  - name: QUAY_USER
    value: /etc/kubevirtci-cred/username
  - name: QUAY_PASSWORD
    value: /etc/kubevirtci-cred/password
  - name: QUAY_OAUTH_TOKEN
    value: /etc/kubevirtci-cred/token
  volumes:
  - name: kubevirtci-cred
    secret:
      defaultMode: 0400
      secretName: kubevirtci-quay-credential
  volumeMounts:
  - name: kubevirtci-cred
    mountPath: /etc/kubevirtci-cred
    readOnly: true
- labels:
    preset-kubevirtci-check-provision-env: "true"
  env:
  - name: KUBEVIRT_PSA
    value: "true"
  - name: PHASES
    value: "k8s"
  - name: CHECK_CLUSTER
    value: "true"
- labels:
    preset-project-infra-kubevirtci-docker-credential: "true"
  env:
  - name: DOCKER_USER
    value: /etc/kubevirtci-cred/username
  - name: DOCKER_PASSWORD
    value: /etc/kubevirtci-cred/password
  volumes:
  - name: kubevirtci-cred
    secret:
      defaultMode: 0400
      secretName: kubevirtci-docker-credential
  volumeMounts:
  - name: kubevirtci-cred
    mountPath: /etc/kubevirtci-cred
    readOnly: true
- labels:
    preset-github-credentials: "true"
  env:
  - name: GIT_ASKPASS
    value: ../project-infra/hack/git-askpass.sh
  volumes:
  - name: github-token
    secret:
      secretName: oauth-token
      defaultMode: 0400
  volumeMounts:
    - name: github-token
      mountPath: /etc/github
- labels:
    preset-gcs-credentials: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/gcs/service-account.json
  volumes:
  - name: gcs
    secret:
      secretName: gcs
      defaultMode: 0400
  volumeMounts:
  - name: gcs
    mountPath: /etc/gcs
    readOnly: true
- labels:
    preset-pgp-bot-key: "true"
  volumeMounts:
  - mountPath: /etc/pgp
    name: pgp-bot-key
    readOnly: true
  volumes:
  - name: pgp-bot-key
    secret:
      secretName: pgp-bot-key

# default preset with no labels, settings common to all jobs
- env:
  - name: GOPROXY
    value: "https://proxy.golang.org|direct"

managed_webhooks:
  # This has to be true if any of the managed repo/org is using the legacy global token that is manually created.
  respect_legacy_global_token: true
  # Config for orgs and repos that have been onboarded to this Prow instance.
  org_repo_config:
    kubevirt:
      token_created_after: 2021-07-15T01:00:00Z
    k8snetworkplumbingwg/kubemacpool:
      token_created_after: 2021-07-16T01:00:00Z
    k8snetworkplumbingwg/ovs-cni:
      token_created_after: 2021-07-16T01:00:00Z
    nmstate/kubernetes-nmstate:
      token_created_after: 2021-07-16T01:00:00Z
    nmstate/nmstate:
      token_created_after: 2021-07-16T01:00:00Z
