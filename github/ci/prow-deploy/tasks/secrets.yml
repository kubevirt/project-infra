---
- name: Create secrets dir
  file:
    path: '{{ secrets_dir }}'
    state: directory

- name: use git askpass to generate github token
  local_action: command '{{ lookup("env", "GIT_ASKPASS") | default(playbook_dir + "/../../../../../hack/git-askpass.sh", true) }}'
  register: gitAskPass

- name: set github token
  set_fact:
    githubToken: '{{ gitAskPass.stdout }}'
- name: Check GITHUB_TOKEN env var
  fail:
    msg: GITHUB_TOKEN must be set
  when: githubToken is undefined or githubToken == ""

- name: Create github token secret
  copy:
    content: '{{ githubToken }}'
    dest: '{{ secrets_dir }}/oauth-token'

- name: Create unprivileged github token secret
  copy:
    content: '{{ githubUnprivileged.token }}'
    dest: '{{ secrets_dir }}/unprivileged-oauth-token'

- name: set gcs service account
  set_fact:
    gcsServiceAccount: '{{ lookup("env", "GOOGLE_APPLICATION_CREDENTIALS") }}'
- name: Check GOOGLE_APPLICATION_CREDENTIALS env var
  fail:
    msg: GOOGLE_APPLICATION_CREDENTIALS must be set
  when: gcsServiceAccount is undefined or gcsServiceAccount == ""

- name: Create GCS secret
  copy:
    src: '{{ gcsServiceAccount }}'
    dest: '{{ secrets_dir }}/service-account.json'

- name: Create Slack secret
  copy:
    content: '{{ slackToken }}'
    dest: '{{ secrets_dir }}/slack-token'

- name: Create Cookie secret
  copy:
    content: '{{ appCookieSecret }}'
    dest: '{{ secrets_dir }}/cookie'

- name: Create Github OAuth config secret
  copy:
    content: '{{ appOAuthConfig }}'
    dest: '{{ secrets_dir }}/github-oauth-config'

- name: Create kubeconfig secret
  when: kubeconfig is defined
  block:
    - name: Create kubeconfig file
      copy:
        content: '{{ kubeconfig }}'
        dest: '{{ kubeconfig_path }}'

- name: Create docker proxy CA key
  copy:
    content: '{{ dockerMirrorProxyCA.key }}'
    dest: '{{ components_dir }}/docker-mirror-proxy/base/secrets/ca.key'

- name: Create docker credentials secret
  template:
    src: docker_credentials.j2
    dest: '{{ secrets_dir }}/kubevirtci-docker-credential'

- name: Create quay credentials secret
  template:
    src: quay_credentials.j2
    dest: '{{ secrets_dir }}/kubevirtci-quay-credential'

- name: Create installer pull token secret
  copy:
    content: '{{ installerPullToken }}'
    dest: '{{ secrets_dir }}/kubevirtci-installer-pull-token'

- name: Create commenter oauth token secret
  copy:
    content: '{{ githubCommenterToken }}'
    dest: '{{ secrets_dir }}/commenter-oauth-token'

- name: Create coveralls token secret
  copy:
    content: '{{ coverallsToken }}'
    dest: '{{ secrets_dir }}/kubevirtci-coveralls-token'

- name: Create win-sysprep-001 secret
  copy:
    content: '{{ windowsProductKeys["sysprep-001"] }}'
    dest: '{{ secrets_dir }}/win-sysprep-001'

- name: Create FOSSA token secret
  copy:
    content: '{{ fossaToken }}'
    dest: '{{ secrets_dir }}/kubevirtci-fossa-token'
