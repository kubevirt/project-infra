---
- name: set deploy environment
  set_fact:
    deploy_environment: '{{ lookup("env", "DEPLOY_ENVIRONMENT") }}'
  when: deploy_environment is undefined

- name: Check deploy_environment
  fail:
    msg: DEPLOY_ENVIRONMENT must be set
  when: deploy_environment is undefined or deploy_environment == ""

- name: load deploy config from environment
  include_vars:
    dir: "./{{ deploy_environment }}"

- name: prepare docker proxy CA if needed
  when: dockerMirrorProxyCA is not defined
  block:
    - name: create docker mirror proxy CA files
      shell: |
        set -eo pipefail

        # testing keypair generated following https://github.com/rpardini/docker-registry-proxy/blob/master/create_ca_cert.sh
        CA_KEY_FILE=/tmp/ca.key
        CA_CRT_FILE=/tmp/ca.crt

        openssl genrsa -des3 -passout pass:foobar -out ${CA_KEY_FILE} 4096

        openssl req -new -x509 -days 1300 -sha256 -key ${CA_KEY_FILE} -out ${CA_CRT_FILE} -passin pass:foobar -subj "/C=NL/ST=Noord Holland/L=Amsterdam/O=ME/OU=IT/CN=${CN_CA}" -extensions IA -config <(
        cat <<-EOF
        [req]
        distinguished_name = dn
        [dn]
        [IA]
        basicConstraints = critical,CA:TRUE
        keyUsage = critical, digitalSignature, cRLSign, keyCertSign
        subjectKeyIdentifier = hash
        EOF
        )

      args:
        executable: /bin/bash

    - name: get CA key file contents
      slurp:
        src: /tmp/ca.key
      register: caKey
    - name: get CA crt file contents
      slurp:
        src: /tmp/ca.crt
      register: caCrt

    - name: set docker mirror proxy tmp var
      set_fact:
        # we use a different variable here to let the loop iterate over all the
        # items, otherwise, given that the block executes if dockerMirrorProxyCA
        # is empty, after the first iteration (when dockerMirrorProxyCA is defined)
        # the loop stops
        dockerMirrorProxyCATmp: "{{ dockerMirrorProxyCATmp | default({}) | combine ({ item.key : item.value }) }}"
      with_items:
        - {'key': 'crt', 'value': '{{ caCrt["content"] | b64decode }}'}
        - {'key': 'key', 'value': '{{ caKey["content"] | b64decode }}'}

    - name: set docker mirror proxy var
      set_fact:
        dockerMirrorProxyCA: '{{ dockerMirrorProxyCATmp }}'

#- name: Basic Validation
#  include_tasks: validate.yml

- name: create secret files
  include_tasks: secrets.yml

- name: create config files
  include_tasks: configs.yml

- name: create templated resources
  include_tasks: resources.yml

- name: set kubectl context if needed
  when: remote_cluster_prow_jobs_context is defined
  block:
    - name: switch context
      shell: |
        {{ kubectl_exec }} config use-context {{ remote_cluster_prow_jobs_context }}
        {{ kubectl_exec }} config current-context

      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      register: result

    - debug:
        var: result

- name: Launch deployment
  when: "'deploy' in main_actions"
  include_tasks: deploy.yml

- name: Launch cleanup
  include_tasks: cleanup.yml
  when: "'cleanup' in main_actions"
