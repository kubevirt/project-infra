postsubmits:
  kubevirt/containerized-data-importer:
  - name: push-release-containerized-data-importer-images
    branches:
    - release-v\d+\.\d+
    cluster: kubevirt-prow-control-plane
    always_run: true
    optional: false
    skip_report: true
    annotations:
      testgrid-create-test-group: "false"
    decorate: true
    decoration_config:
      timeout: 1h
      grace_period: 5m
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "false"
      preset-kubevirtci-quay-credential: "true"
    spec:
      containers:
      - image: quay.io/kubevirtci/bootstrap:v20240911-16816d3
        env:
        - name: DOCKER_PREFIX
          value: quay.io/kubevirt
        command:
        - "/usr/local/bin/runner.sh"
        - "/bin/sh"
        - "-c"
        - |
          cat "$QUAY_PASSWORD" | docker login --username $(cat "$QUAY_USER") --password-stdin=true quay.io &&
          # Only push images on tags
          [ -z "$(git tag --points-at HEAD | head -1)" ] ||
          DOCKER_TAG="$(git tag --points-at HEAD | head -1)" make bazel-push-images
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "8Gi"
  - name: push-latest-containerized-data-importer-images
    branches:
    - main
    cluster: kubevirt-prow-control-plane
    always_run: true
    optional: false
    skip_report: true
    annotations:
      testgrid-create-test-group: "false"
    decorate: true
    decoration_config:
      timeout: 1h
      grace_period: 5m
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "false"
      preset-kubevirtci-quay-credential: "true"
    spec:
      containers:
      - image: quay.io/kubevirtci/bootstrap:v20240911-16816d3
        env:
        - name: DOCKER_PREFIX
          value: quay.io/kubevirt
        command:
        - "/usr/local/bin/runner.sh"
        - "/bin/sh"
        - "-c"
        - |
          cat "$QUAY_PASSWORD" | docker login --username $(cat "$QUAY_USER") --password-stdin=true quay.io &&
          DOCKER_TAG="latest" make bazel-push-images
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "8Gi"
  - name: push-release-containerized-data-importer-tag
    branches:
    - release-v\d+\.\d+
    cluster: kubevirt-prow-control-plane
    always_run: true
    optional: false
    skip_report: true
    annotations:
      testgrid-create-test-group: "false"
    decorate: true
    decoration_config:
      timeout: 3h
      grace_period: 5m
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "false"
      preset-kubevirtci-quay-credential: "false"
      preset-github-credentials: "true"
    spec:
      containers:
      - image: quay.io/kubevirtci/bootstrap:v20240911-16816d3
        env:
        - name: DOCKER_PREFIX
          value: quay.io/kubevirt
        - name: GH_CLI_VERSION
          value: "1.5.0"
        - name: GITHUB_TOKEN_PATH
          value: /etc/github/oauth
        - name: GITHUB_REPOSITORY
          value: kubevirt/containerized-data-importer
        - name: GIT_USER_NAME
          value: kubevirt-bot
        command: [ "/usr/local/bin/runner.sh", "/bin/sh", "-c" ]
        args:
        - ./automation/release.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "8Gi"
  - name: push-containerized-data-importer-main
    branches:
    - main
    cluster: kubevirt-prow-control-plane
    always_run: true
    optional: false
    skip_report: true
    annotations:
      testgrid-create-test-group: "false"
    decorate: true
    decoration_config:
      timeout: 3h
      grace_period: 5m
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "false"
      preset-kubevirtci-quay-credential: "false"
      preset-github-credentials: "true"
    spec:
      containers:
      - image: quay.io/kubevirtci/bootstrap:v20240911-16816d3
        env:
        - name: DOCKER_PREFIX
          value: quay.io/kubevirt
        - name: GH_CLI_VERSION
          value: "1.5.0"
        - name: GITHUB_TOKEN_PATH
          value: /etc/github/oauth
        - name: GITHUB_REPOSITORY
          value: kubevirt/containerized-data-importer
        - name: GIT_USER_NAME
          value: kubevirt-bot
        command: [ "/usr/local/bin/runner.sh", "/bin/sh", "-c" ]
        args:
        - ./automation/postsubmit-main.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "8Gi"
  - name: push-containerized-data-importer-builder
    branches:
    - main
    - release-v\d+\.\d+
    cluster: kubevirt-prow-control-plane
    always_run: false
    run_if_changed: "hack/build/docker/builder/.*"
    annotations:
      testgrid-create-test-group: "false"
    decorate: true
    decoration_config:
      timeout: 3h
      grace_period: 5m
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-gcs-credentials: "true"
      preset-github-credentials: "true"
      preset-kubevirtci-quay-credential: "true"
    spec:
      containers:
      - image: quay.io/kubevirtci/bootstrap:v20240911-16816d3
        env:
        - name: DOCKER_PREFIX
          value: quay.io/kubevirt
        command:
          - "/usr/local/bin/runner.sh"
          - "/bin/sh"
          - "-ce"
          - |
            cat "$QUAY_PASSWORD" | docker login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
            CDI_CONTAINER_BUILDCMD=buildah make builder-push
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "8Gi"
  - name: push-cdi-goveralls
    cluster: kubevirt-prow-control-plane
    annotations:
      testgrid-create-test-group: "false"
    always_run: true
    decorate: true
    decoration_config:
      grace_period: 10m0s
      timeout: 1h0m0s
    labels:
      preset-bazel-cache: "true"
      preset-docker-mirror-proxy: "true"
    skip_branches:
    - release-v\d+\.\d+
    spec:
      containers:
      - command:
        - /usr/local/bin/runner.sh
        - /bin/sh
        - -c
        - cp /etc/bazel.bazelrc ./ci.bazelrc && if [ ${JOB_TYPE} != 'batch' ]; then
          make goveralls; fi
        env:
        - name: COVERALLS_TOKEN_FILE
          value: /root/.docker/secrets/coveralls/token
        image: quay.io/kubevirtci/bootstrap:v20240911-16816d3
        name: ""
        resources:
          requests:
            memory: 8Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /root/.docker/secrets/coveralls
          name: containerized-data-importer-coveralls
          readOnly: true
      volumes:
      - name: containerized-data-importer-coveralls
        secret:
          secretName: containerized-data-importer-coveralls-token
