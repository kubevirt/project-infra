periodics:
- name: periodic-kubevirtci-sync-crio-repository-weekly
  cron: "25 0 * * 1"
  decorate: true
  annotations:
      testgrid-create-test-group: "false"
  decoration_config:
    timeout: 1h
    grace_period: 5m
  max_concurrency: 1
  labels:
    preset-shared-images: "true"
  cluster: prow-workloads
  spec:
    containers:
      - image: quay.io/kubevirtci/bootstrap:v20210311-09ebaa2
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/gcs/service-account.json
          - name: OS
            value: CentOS_8_Stream
          - name: BUCKET_DIR
            value: kubevirtci-crio-mirror
          - name: LOCAL_MIRROR_DIR
            value: opensuse-mirror
          - name: BASE_REPOID
            value: devel_kubic_libcontainers_stable
          - name: CRIO_VERSIONS
            value: "1.20,1.21"
        command:
          - "/usr/local/bin/runner.sh"
          - "/bin/sh"
          - "-c"
          - |
            set -e;
            dnf install dnf-utils -y

            sync_crio_repo_for_version () {
              if [ -z "$1" ]
              then
                  CRIO_SUBDIR=""
                  REPOID=$BASE_REPOID
              else
                  CRIO_SUBDIR=":cri-o:$1"
                  REPOID="${BASE_REPOID}_cri-o_$1"
              fi
              curl -L -o $REPOID.repo https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable$CRIO_SUBDIR/$OS/devel:kubic:libcontainers:stable$CRIO_SUBDIR.repo
              reposync -c $REPOID.repo -p ./$LOCAL_MIRROR_DIR -n --repoid=$REPOID --download-metadata
            }

            # First sync the shared stable repository
            sync_crio_repo_for_version

            # Loop over comma-separated list of cri-o versions
            for i in $(echo $CRIO_VERSIONS | sed "s/,/ /g")
            do
              sync_crio_repo_for_version $i
            done

            gsutil rsync -d -r $LOCAL_MIRROR_DIR gs://$BUCKET_DIR
        resources:
          requests:
            memory: "2Gi"
        volumeMounts:
          - name: gcs
            mountPath: /etc/gcs
            readOnly: false
    volumes:
      - name: gcs
        secret:
          secretName: gcs
- name: periodic-kubevirtci-bump-kubevirt
  interval: 24h
  annotations:
    testgrid-create-test-group: "false"
  decorate: true
  decoration_config:
    timeout: 1h
  max_concurrency: 1
  extra_refs:
  - org: kubevirt
    repo: project-infra
    base_ref: main
  - org: kubevirt
    repo: kubevirt
    base_ref: main
  labels:
    preset-dind-enabled: "true"
    preset-docker-mirror: "true"
  cluster: prow-workloads
  spec:
    volumes:
    - name: token
      secret:
        secretName: oauth-token
    - name: gcs
      secret:
        secretName: gcs
    containers:
    - image: quay.io/kubevirt/builder:2105121048-a05ef0ee1
      env:
      - name: GIT_ASKPASS
        value: "../project-infra/hack/git-askpass.sh"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/gcs/service-account.json
      command: ["/bin/sh", "-c"]
      args:
      - ../project-infra/hack/git-pr.sh -c "cd ../kubevirt && make bump-kubevirtci" -d "./hack/whatchanged.sh" -b bump-kubevirtci -p ../kubevirt -T main
      volumeMounts:
      - name: token
        mountPath: /etc/github
      # docker-in-docker needs privileged mode
      - name: gcs
        mountPath: /etc/gcs
        readOnly: false
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "8Gi"
