periodics:
- name: periodic-kubevirt-flakefinder-hourly-rolling-window-report
  cron: "5 * * * *"
  decorate: true
  annotations:
    testgrid-create-test-group: "false"
  spec:
    nodeSelector:
      type: vm
      zone: ci
    containers:
      - image: quay.io/kubevirtci/flakefinder@sha256:c1a136c77b6dfdaafa8df1faac7b3e2673dcde2e8dec7bdc449abf24b1b71403
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/gcs/service-account.json
        command:
          - "/app/robots/flakefinder/app.binary"
        args:
          - --dry-run=false
          - --token=/etc/github/oauth
          - --merged=24h
          - --today=true
          - --report_output_child_path=kubevirt/kubevirt
          - --skip_results_before_start_of_report=false
        volumeMounts:
          - name: token
            mountPath: /etc/github
          - name: gcs
            mountPath: /etc/gcs
            readOnly: true
    volumes:
      - name: token
        secret:
          secretName: oauth-token
      - name: gcs
        secret:
          secretName: gcs
- name: periodic-publish-kubevirt-flakefinder-weekly-report
  cron: "45 0 * * *"
  decorate: true
  annotations:
    testgrid-create-test-group: "false"
  spec:
    nodeSelector:
      type: vm
      zone: ci
    containers:
    - image: quay.io/kubevirtci/flakefinder@sha256:c1a136c77b6dfdaafa8df1faac7b3e2673dcde2e8dec7bdc449abf24b1b71403
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/gcs/service-account.json
      command:
      - "/app/robots/flakefinder/app.binary"
      args:
      - --dry-run=false
      - --token=/etc/github/oauth
      - --merged=168h
      - --report_output_child_path=kubevirt/kubevirt
      - --skip_results_before_start_of_report=false
      volumeMounts:
      - name: token
        mountPath: /etc/github
      - name: gcs
        mountPath: /etc/gcs
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: oauth-token
    - name: gcs
      secret:
        secretName: gcs
- name: periodic-publish-kubevirt-flakefinder-daily-report
  cron: "25 0 * * *"
  decorate: true
  annotations:
    testgrid-create-test-group: "false"
  spec:
    nodeSelector:
      type: vm
      zone: ci
    containers:
    - image: quay.io/kubevirtci/flakefinder@sha256:c1a136c77b6dfdaafa8df1faac7b3e2673dcde2e8dec7bdc449abf24b1b71403
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/gcs/service-account.json
      command:
      - "/app/robots/flakefinder/app.binary"
      args:
      - --dry-run=false
      - --token=/etc/github/oauth
      - --merged=24h
      - --report_output_child_path=kubevirt/kubevirt
      - --skip_results_before_start_of_report=false
      volumeMounts:
      - name: token
        mountPath: /etc/github
      - name: gcs
        mountPath: /etc/gcs
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: oauth-token
    - name: gcs
      secret:
        secretName: gcs
- name: periodic-publish-kubevirt-flakefinder-four-weekly-report
  interval: 168h
  decorate: true
  annotations:
    testgrid-create-test-group: "false"
  spec:
    nodeSelector:
      type: vm
      zone: ci
    containers:
    - image: quay.io/kubevirtci/flakefinder@sha256:c1a136c77b6dfdaafa8df1faac7b3e2673dcde2e8dec7bdc449abf24b1b71403
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/gcs/service-account.json
      command:
      - "/app/robots/flakefinder/app.binary"
      args:
      - --dry-run=false
      - --token=/etc/github/oauth
      - --merged=672h
      - --report_output_child_path=kubevirt/kubevirt
      - --skip_results_before_start_of_report=false
      volumeMounts:
      - name: token
        mountPath: /etc/github
      - name: gcs
        mountPath: /etc/gcs
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: oauth-token
    - name: gcs
      secret:
        secretName: gcs
- name: periodic-kubevirt-push-nightly-build-master
  cron: "2 1 * * *"
  decorate: true
  annotations:
    testgrid-create-test-group: "false"
  decoration_config:
    timeout: 1h
    grace_period: 5m
  max_concurrency: 1
  labels:
    preset-dind-enabled: "true"
    preset-docker-mirror-proxy: "true"
    preset-shared-images: "true"
    preset-kubevirtci-quay-credential: "true"
  extra_refs:
    - org: kubevirt
      repo: kubevirt
      base_ref: master
      work_dir: true
  spec:
    nodeSelector:
      type: bare-metal-external
    containers:
    - image: quay.io/kubevirtci/bootstrap:v20210129-9f1d6a8
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/gcs/service-account.json
      - name: DOCKER_PREFIX
        value: quay.io/kubevirt
      command:
        - "/usr/local/bin/runner.sh"
        - "/bin/sh"
        - "-c"
        - |
          set -e
          cat "$QUAY_PASSWORD" | docker login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
          export DOCKER_TAG="$(date +%Y%m%d)_$(git show -s --format=%h)"
          make
          counter=3
          retval=0
          while [ $counter -gt 0 ]; do
              set +e
              make push
              retval=$?
              set -e
              if [ $retval -eq 0 ]; then
                  break
              fi
              set +e
              counter=$(expr $counter - 1)
              set -e
              sleep 120
          done
          if [ $retval -ne 0 ]; then
              echo "push failed!"
              exit 1
          fi
          make build-functests
          git show -s --format=%H > _out/commit
          build_date="$(date +%Y%m%d)"
          echo ${build_date} > _out/build_date
          bucket_dir="kubevirt-prow/devel/nightly/release/kubevirt/kubevirt/${build_date}"
          gsutil cp ./_out/manifests/release/kubevirt-operator.yaml ./_out/manifests/release/kubevirt-cr.yaml gs://$bucket_dir/
          gsutil cp -r ./_out/manifests/testing gs://$bucket_dir/
          gsutil cp ./_out/tests/tests.test gs://$bucket_dir/testing/
          gsutil cp ./_out/commit gs://$bucket_dir/commit
          gsutil cp ./_out/build_date gs://kubevirt-prow/devel/nightly/release/kubevirt/kubevirt/latest
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "8Gi"
      volumeMounts:
        - name: gcs
          mountPath: /etc/gcs
          readOnly: false
    volumes:
      - name: gcs
        secret:
          secretName: gcs
- name: periodic-kubevirt-clean-nightly-build-master
  cluster: ibm-prow-jobs
  cron: "2 15 */7 * *"
  decorate: true
  annotations:
    testgrid-create-test-group: "false"
  decoration_config:
    timeout: 1h
    grace_period: 5m
  max_concurrency: 1
  labels:
    preset-docker-mirror-proxy: "true"
    preset-shared-images: "true"
  spec:
    containers:
    - image: quay.io/kubevirtci/bootstrap:v20210129-9f1d6a8
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/gcs/service-account.json
      command:
        - "/usr/local/bin/runner.sh"
        - "/bin/sh"
        - "-c"
        - >
          set -e;
          latest_build=$(gsutil cat gs://kubevirt-prow/devel/nightly/release/kubevirt/kubevirt/latest);
          delete_before_seconds=$(date -d "$latest_build - 4 weeks" +%s);
          for nightly_build_dir in $(gsutil ls gs://kubevirt-prow/devel/nightly/release/kubevirt/kubevirt/ | grep -E '[0-9]+\/$'); do
            build_date=$(echo "${nightly_build_dir}" | sed -E 's#^.*/([0-9]+)/$#\1#g');
            bd_seconds=$(date -d "$build_date" +%s);
            if [ $bd_seconds -lt $delete_before_seconds ]; then
              echo "Deleting $nightly_build_dir";
              gsutil -m rm -r ${nightly_build_dir};
            fi;
          done
      resources:
        requests:
          memory: "200Mi"
      volumeMounts:
        - name: gcs
          mountPath: /etc/gcs
          readOnly: false
    volumes:
      - name: gcs
        secret:
          secretName: gcs
- name: periodic-kubevirt-push-nightly-conformance
  cron: "30 2 * * *"
  decorate: true
  max_concurrency: 1
  annotations:
    testgrid-dashboards: kubevirt-periodics
  decoration_config:
    timeout: 7h
    grace_period: 5m
  labels:
    preset-dind-enabled: "true"
    preset-docker-mirror-proxy: "true"
    preset-shared-images: "true"
  annotations:
    testgrid-dashboards: kubevirt-periodics
  extra_refs:
    - org: kubevirt
      repo: kubevirt
      base_ref: master
      path_alias: kubevirt
      workdir: true
  spec:
    nodeSelector:
      type: bare-metal-external
    containers:
      - image: quay.io/kubevirtci/bootstrap:v20210129-9f1d6a8
        command:
          - "/usr/local/bin/runner.sh"
          - "/bin/sh"
          - "-c"
          - "automation/conformance.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "29Gi"
# FIXME: temporary job, to be deleted when the releases are done by prow
- name: periodic-kubevirt-update-release-0.34-testing-manifests
  cluster: ibm-prow-jobs
  cron: "45 0 * * *"
  annotations:
    testgrid-create-test-group: "false"
  decorate: true
  decoration_config:
    timeout: 1h
    grace_period: 5m
  extra_refs:
    - org: kubevirt
      repo: kubevirt
      base_ref: master
      work_dir: true
  labels:
    preset-dind-enabled: "true"
    preset-docker-mirror-proxy: "true"
    preset-shared-images: "true"
  max_concurrency: 1
  spec:
    containers:
      - image: quay.io/kubevirtci/bootstrap:v20210129-9f1d6a8
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/gcs/service-account.json
        command: [ "/usr/local/bin/runner.sh", "/bin/sh", "-c" ]
        args:
          - |
            set -e
            release_xy="0.34"
            export release_version="$(
                curl --fail -s https://api.github.com/repos/kubevirt/kubevirt/releases |
                jq -r '(.[].tag_name | select( test("-(rc|alpha|beta)") | not ) )' |
                sort -rV | grep "v$release_xy" | head -1
            )"
            git checkout "${release_version}"
            make manifests
            if [ $(gsutil ls 'gs://kubevirt-prow/devel/release/kubevirt/kubevirt/'|grep ${release_version}|wc -l) -gt 0 ]; then
              gsutil -m rm -r gs://kubevirt-prow/devel/release/kubevirt/kubevirt/${release_version}
            fi
            gsutil cp -r _out/manifests/testing gs://kubevirt-prow/devel/release/kubevirt/kubevirt/${release_version}/manifests/
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "4Gi"
        volumeMounts:
          - name: gcs
            mountPath: /etc/gcs
            readOnly: false
    volumes:
      - name: gcs
        secret:
          secretName: gcs
# FIXME: temporary job, to be deleted when the releases are done by prow
- name: periodic-kubevirt-update-release-0.36-testing-manifests
  cluster: ibm-prow-jobs
  cron: "45 0 * * *"
  annotations:
    testgrid-create-test-group: "false"
  decorate: true
  decoration_config:
    timeout: 1h
    grace_period: 5m
  extra_refs:
    - org: kubevirt
      repo: kubevirt
      base_ref: master
      work_dir: true
  labels:
    preset-dind-enabled: "true"
    preset-docker-mirror-proxy: "true"
    preset-shared-images: "true"
  max_concurrency: 1
  spec:
    containers:
      - image: quay.io/kubevirtci/bootstrap:v20210129-9f1d6a8
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/gcs/service-account.json
        command: [ "/usr/local/bin/runner.sh", "/bin/sh", "-c" ]
        args:
          - |
            set -e
            release_xy="0.36"
            export release_version="$(
                curl --fail -s https://api.github.com/repos/kubevirt/kubevirt/releases |
                jq -r '(.[].tag_name | select( test("-(rc|alpha|beta)") | not ) )' |
                sort -rV | grep "v$release_xy" | head -1
            )"
            git checkout "${release_version}"
            make manifests
            if [ $(gsutil ls 'gs://kubevirt-prow/devel/release/kubevirt/kubevirt/'|grep ${release_version}|wc -l) -gt 0 ]; then
              gsutil -m rm -r gs://kubevirt-prow/devel/release/kubevirt/kubevirt/${release_version}
            fi
            gsutil cp -r _out/manifests/testing gs://kubevirt-prow/devel/release/kubevirt/kubevirt/${release_version}/manifests/
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "4Gi"
        volumeMounts:
          - name: gcs
            mountPath: /etc/gcs
            readOnly: false
    volumes:
      - name: gcs
        secret:
          secretName: gcs
# FIXME: temporary job, to be deleted when the releases are done by prow
- name: periodic-kubevirt-update-release-0.38-testing-manifests
  cluster: ibm-prow-jobs
  cron: "45 0 * * *"
  annotations:
    testgrid-create-test-group: "false"
  decorate: true
  decoration_config:
    timeout: 1h
    grace_period: 5m
  extra_refs:
    - org: kubevirt
      repo: kubevirt
      base_ref: master
      work_dir: true
  labels:
    preset-dind-enabled: "true"
    preset-docker-mirror-proxy: "true"
    preset-shared-images: "true"
  max_concurrency: 1
  spec:
    containers:
      - image: kubevirtci/bootstrap:v20201119-a5880e0
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/gcs/service-account.json
        command: [ "/usr/local/bin/runner.sh", "/bin/sh", "-c" ]
        args:
          - |
            set -e
            release_xy="0.38"
            export release_version="$(
                curl --fail -s https://api.github.com/repos/kubevirt/kubevirt/releases |
                jq -r '(.[].tag_name | select( test("-(rc|alpha|beta)") | not ) )' |
                sort -rV | grep "v$release_xy" | head -1
            )"
            git checkout "${release_version}"
            make manifests
            if [ $(gsutil ls 'gs://kubevirt-prow/devel/release/kubevirt/kubevirt/'|grep ${release_version}|wc -l) -gt 0 ]; then
              gsutil -m rm -r gs://kubevirt-prow/devel/release/kubevirt/kubevirt/${release_version}
            fi
            gsutil cp -r _out/manifests/testing gs://kubevirt-prow/devel/release/kubevirt/kubevirt/${release_version}/manifests/
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "4Gi"
        volumeMounts:
          - name: gcs
            mountPath: /etc/gcs
            readOnly: false
    volumes:
      - name: gcs
        secret:
          secretName: gcs
- name: periodic-kubevirt-e2e-k8s-latest
  annotations:
    testgrid-dashboards: kubevirt-periodics
    testgrid-days-of-results: "60"
  cron: "0 22,10 * * *"
  decorate: true
  decoration_config:
    timeout: 7h
    grace_period: 5m
  labels:
    preset-dind-enabled: "true"
    preset-docker-mirror-proxy: "true"
    preset-shared-images: "true"
  extra_refs:
  - org: kubevirt
    repo: kubevirt
    base_ref: master
    work_dir: true
  skip_report: true
  spec:
    nodeSelector:
      type: bare-metal-external
    containers:
      - image: kubevirtci/bootstrap:v20201119-a5880e0
        command: [ "/usr/local/bin/runner.sh", "/bin/sh", "-c" ]
        args:
          - |
            export TARGET=$(ls cluster-up/cluster/ | grep -E '^k8s-1\.[0-9]+$' | sort --sort=version -r | sed -n '1p')
            automation/test.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "29Gi"
- name: periodic-kubevirt-e2e-k8s-prev
  annotations:
    testgrid-dashboards: kubevirt-periodics
    testgrid-days-of-results: "60"
  cron: "0 22,10 * * *"
  decorate: true
  decoration_config:
    timeout: 7h
    grace_period: 5m
  labels:
    preset-dind-enabled: "true"
    preset-docker-mirror-proxy: "true"
    preset-shared-images: "true"
  extra_refs:
  - org: kubevirt
    repo: kubevirt
    base_ref: master
    work_dir: true
  skip_report: true
  spec:
    nodeSelector:
      type: bare-metal-external
    containers:
      - image: kubevirtci/bootstrap:v20201119-a5880e0
        command: [ "/usr/local/bin/runner.sh", "/bin/sh", "-c" ]
        args:
          - |
            export TARGET=$(ls cluster-up/cluster/ | grep -E '^k8s-1\.[0-9]+$' | sort --sort=version -r | sed -n '2p')
            automation/test.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "29Gi"
- name: periodic-kubevirt-e2e-k8s-prev-prev
  annotations:
    testgrid-dashboards: kubevirt-periodics
    testgrid-days-of-results: "60"
  cron: "0 22,10 * * *"
  decorate: true
  decoration_config:
    timeout: 7h
    grace_period: 5m
  labels:
    preset-dind-enabled: "true"
    preset-docker-mirror-proxy: "true"
    preset-shared-images: "true"
  extra_refs:
  - org: kubevirt
    repo: kubevirt
    base_ref: master
    work_dir: true
  skip_report: true
  spec:
    nodeSelector:
      type: bare-metal-external
    containers:
      - image: kubevirtci/bootstrap:v20201119-a5880e0
        command: [ "/usr/local/bin/runner.sh", "/bin/sh", "-c" ]
        args:
          - |
            export TARGET=$(ls cluster-up/cluster/ | grep -E '^k8s-1\.[0-9]+$' | sort --sort=version -r | sed -n '3p')
            automation/test.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "29Gi"
