postsubmits:
  kubevirt/kubevirt:
  - name: push-release-kubevirt-tag
    branches:
    # regex for semver from https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
    - ^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
    cluster: kubevirt-prow-control-plane
    always_run: true
    optional: false
    skip_report: false
    annotations:
      testgrid-create-test-group: "false"
    decorate: true
    decoration_config:
      timeout: 3h
      grace_period: 5m
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-gcs-credentials: "true"
      preset-github-credentials: "true"
      preset-kubevirtci-quay-credential: "true"
    spec:
      containers:
      - image: quay.io/kubevirtci/golang:v20240814-9b6c4af
        env:
        - name: DOCKER_PREFIX
          value: quay.io/kubevirt
        - name: GH_CLI_VERSION
          value: "1.5.0"
        - name: GITHUB_TOKEN_PATH
          value: /etc/github/oauth
        - name: GITHUB_REPOSITORY
          value: kubevirt/kubevirt
        - name: GIT_USER_NAME
          value: kubevirt-bot
        command: [ "/usr/local/bin/runner.sh", "/bin/sh", "-c" ]
        args:
        - |
          set -e
          major_minor="$(git tag --points-at HEAD | head -1 | grep -oE '[0-9]+.[0-9]+')"
          if [ $(expr $major_minor \>\= 0.40) -eq 1 ] || [ $(expr $major_minor \=\= 0.36) -eq 1 ]; then
            cat $QUAY_PASSWORD | podman login --username "$(cat "$QUAY_USER")" --password-stdin=true quay.io
            ./automation/release.sh
          fi
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "8Gi"
  - name: push-update-testing-manifests-on-kubevirt-tag
    branches:
    - ^v0\.3[46]\.[0-9]+$
    cluster: kubevirt-prow-control-plane
    always_run: true
    annotations:
      testgrid-create-test-group: "false"
    decorate: true
    decoration_config:
      timeout: 1h
      grace_period: 5m
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-gcs-credentials: "true"
    spec:
      containers:
      - image: quay.io/kubevirtci/bootstrap:v20240814-9b6c4af
        command: [ "/usr/local/bin/runner.sh", "/bin/sh", "-c" ]
        args:
        - |
          set -xe
          DOCKER_TAG="$(git tag --points-at HEAD | head -1)"
          if [ -z "$DOCKER_TAG" ]; then
            echo "commit $(git show -s --format=%h) doesn't have a tag, exiting..."
            exit 0
          fi
          make manifests
          gsutil -m rm -r "gs://kubevirt-prow/devel/release/kubevirt/kubevirt/$DOCKER_TAG" || true
          gsutil cp -r "_out/manifests/testing" "gs://kubevirt-prow/devel/release/kubevirt/kubevirt/$DOCKER_TAG/manifests/"
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "8Gi"
  - name: push-kubevirt-main
    branches:
    - main
    cluster: kubevirt-prow-control-plane
    always_run: true
    optional: false
    skip_report: false
    annotations:
      testgrid-create-test-group: "false"
    decorate: true
    decoration_config:
      timeout: 3h
      grace_period: 5m
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-gcs-credentials: "true"
      preset-github-credentials: "true"
      preset-kubevirtci-quay-credential: "true"
    spec:
      containers:
      - image: quay.io/kubevirtci/golang:v20240814-9b6c4af
        env:
        - name: DOCKER_PREFIX
          value: quay.io/kubevirt
        - name: GIT_USER_NAME
          value: kubevirt-bot
        - name: GITHUB_TOKEN_PATH
          value: /etc/github/oauth
        command: [ "/usr/local/bin/runner.sh", "/bin/sh", "-c" ]
        args:
        - ./automation/postsubmit-main.sh
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "8Gi"
  - name: push-kubevirt-goveralls
    cluster: kubevirt-prow-control-plane
    branches:
      - main
    annotations:
      testgrid-create-test-group: "false"
    always_run: true
    optional: false
    skip_reporting: true
    decorate: true
    decoration_config:
      timeout: 1h
      grace_period: 10m
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-bazel-cache: "true"
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20240814-9b6c4af
          env:
            - name: COVERALLS_TOKEN_FILE
              value: /root/.docker/secrets/coveralls/token
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/sh"
            - "-c"
            - "cp /etc/bazel.bazelrc ./ci.bazelrc && make goveralls"
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "8Gi"
          volumeMounts:
            - name: kubevirtci-coveralls
              mountPath: /root/.docker/secrets/coveralls
              readOnly: true
      volumes:
        - name: kubevirtci-coveralls
          secret:
            secretName: kubevirtci-coveralls-token
  - name: push-kubevirt-fossa
    cluster: kubevirt-prow-control-plane
    branches:
      - main
    annotations:
      testgrid-create-test-group: "false"
    always_run: true
    decorate: true
    decoration_config:
      timeout: 1h
      grace_period: 10m
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-bazel-cache: "true"
    reporter_config:
      slack:
        job_states_to_report: []
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20240814-9b6c4af
          env:
            - name: FOSSA_TOKEN_FILE
              value: /root/.docker/secrets/fossa/token
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/sh"
            - "-c"
            - "make fossa"
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "4Gi"
          volumeMounts:
            - name: kubevirtci-fossa
              mountPath: /root/.docker/secrets/fossa
              readOnly: true
      volumes:
        - name: kubevirtci-fossa
          secret:
            secretName: kubevirtci-fossa-token
  - name: publish-kubevirt-builder
    always_run: false
    run_if_changed: "hack/builder/.*"
    branches:
      - main
    decorate: true
    max_concurrency: 1
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror: "true"
      preset-gcs-credentials: "true"
      preset-github-credentials: "true"
      preset-kubevirtci-quay-credential: "true"
    annotations:
      testgrid-create-test-group: "false"
    reporter_config:
      slack:
        job_states_to_report: []
    cluster: kubevirt-prow-workloads
    spec:
      nodeSelector:
        type: bare-metal-external
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20240814-9b6c4af
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - >
              cat $QUAY_PASSWORD | podman login quay.io --username $(cat $QUAY_USER) --password-stdin=true &&
              make builder-publish
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "8Gi"
  - name: push-kubevirt-update-support-matrix
    branches:
    # regex for semver from https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
    - ^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
    cluster: kubevirt-prow-control-plane
    always_run: true
    optional: false
    skip_report: false
    annotations:
      testgrid-create-test-group: "false"
    decorate: true
    decoration_config:
      timeout: 3h
      grace_period: 5m
    extra_refs:
    - org: kubevirt
      repo: project-infra
      base_ref: main
    - org: kubevirt
      repo: sig-release
      base_ref: main
    labels:
      preset-github-credentials: "true"
    spec:
      containers:
      - image: quay.io/kubevirtci/pr-creator:v20240305-cb764ec
        env:
        command: [ "/bin/sh", "-ce" ]
        args:
        - |
          project_infra_dir=$(cd ../project-infra && pwd)
          sig_release_dir=$(cd ../sig-release && pwd)
          git-pr.sh -c "cd ../project-infra && bazelisk run //robots/cmd/kubevirt -- get support-matrix --output-file=${sig_release_dir}/releases/k8s-support-matrix.md --overwrite-output-file --job-config-path=${project_infra_dir}/github/ci/prow-deploy/files/jobs/kubevirt/kubevirt" -p ${sig_release_dir} -s 'Automated run of //robots/cmd/kubevirt get support-matrix' -r sig-release -b update-support-matrix -T main
        resources:
          requests:
            memory: "200Mi"
