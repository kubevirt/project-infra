presubmits:
  kubevirt/project-infra:
  - name: check-prow-config
    always_run: true
    decorate: true
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
      - image: us-docker.pkg.dev/k8s-infra-prow/images/checkconfig:v20250318-bb46d5967
        args:
        - "/ko-app/checkconfig"
        - "--config-path"
        - "github/ci/prow-deploy/files/config.yaml"
        - "--job-config-path"
        - "github/ci/prow-deploy/files/jobs"
        - "--plugin-config"
        - "github/ci/prow-deploy/files/plugins.yaml"
        - "--strict"
        resources:
          requests:
            memory: "500Mi"
  - name: pull-project-infra-test-robots
    run_if_changed: "robots/.*|go.mod"
    optional: false
    decorate: true
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
      - image: quay.io/kubevirtci/golang:v20250320-f6c439c
        command:
        - "/usr/local/bin/runner.sh"
        - "/bin/sh"
        - "-ce"
        - |
          go test ./robots/...
        env:
        - name: GIMME_GO_VERSION
          value: "1.23.4"
        - name: GOFLAGS
          value: "-mod=vendor"
        resources:
          requests:
            memory: "4Gi"
          limits:
            memory: "4Gi"
  - name: pull-project-infra-test-releng
    run_if_changed: "releng/.*|go.mod"
    optional: false
    decorate: true
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
      - image: quay.io/kubevirtci/golang:v20250320-f6c439c
        command:
        - "/usr/local/bin/runner.sh"
        - "/bin/sh"
        - "-ce"
        - |
          go test ./releng/...
        env:
        - name: GIMME_GO_VERSION
          value: "1.23.4"
        resources:
          requests:
            memory: "4Gi"
          limits:
            memory: "4Gi"
  - name: pull-project-infra-test-external-plugins
    run_if_changed: "external-plugins/.*|go.mod"
    cluster: kubevirt-prow-control-plane
    optional: false
    decorate: true
    spec:
      containers:
      - image: quay.io/kubevirtci/golang:v20250320-f6c439c
        command:
        - "/usr/local/bin/runner.sh"
        - "/bin/sh"
        - "-ce"
        - |
          go test ./external-plugins/...
        env:
        - name: GIMME_GO_VERSION
          value: "1.23.4"
        resources:
          requests:
            memory: "4Gi"
          limits:
            memory: "4Gi"
  - name: pull-project-infra-test-github-ci-services
    run_if_changed: "github/ci/services/.*|go.mod"
    optional: false
    decorate: true
    cluster: kubevirt-prow-control-plane
    labels:
      preset-bazel-cache: "true"
    spec:
      containers:
      - image: quay.io/kubevirtci/golang:v20250320-f6c439c
        command:
        - "/usr/local/bin/runner.sh"
        - "/bin/sh"
        - "-ce"
        - |
          go build ./github/ci/services/...
        resources:
          requests:
            memory: "4Gi"
          limits:
            memory: "4Gi"
        securityContext:
          runAsUser: 0
  - always_run: false
    cluster: kubevirt-prow-control-plane
    decorate: true
    name: pull-project-infra-lint
    run_if_changed: "external-plugins/.*|releng/.*|robots/.*"
    spec:
      containers:
      - args:
        - make lint
        command:
        - "/usr/local/bin/runner.sh"
        - "/bin/sh"
        - "-ce"
        image: quay.io/kubevirtci/golang:v20250320-f6c439c
        resources:
          requests:
            memory: "1Gi"
          limits:
            memory: "1Gi"
  - always_run: false
    cluster: kubevirt-prow-control-plane
    decorate: true
    name: pull-project-infra-coverage
    run_if_changed: "external-plugins/.*|releng/.*|robots/.*"
    spec:
      containers:
      - args:
        - |
          make coverage
        command:
        - "/usr/local/bin/runner.sh"
        - "/bin/sh"
        - "-ce"
        env:
        - name: GIMME_GO_VERSION
          value: "1.23.4"
        image: quay.io/kubevirtci/golang:v20250320-f6c439c
        resources:
          requests:
            memory: "4Gi"
          limits:
            memory: "4Gi"
  - name: build-kubevirt-infra-bootstrap-image
    always_run: false
    run_if_changed: "images/kubevirt-infra-bootstrap/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-ce"
            - "cd images && ./publish_image.sh -b kubevirt-infra-bootstrap quay.io kubevirtci"
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"
  - name: build-bootstrap-image
    always_run: false
    run_if_changed: "images/bootstrap/.*|images/golang/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-ce"
            - |
              cd images
              ./publish_multiarch_image.sh -a -b bootstrap quay.io kubevirtci
              ./publish_multiarch_image.sh -a -b -l golang quay.io kubevirtci
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "4Gi"
            limits:
              memory: "4Gi"
  - name: build-shared-images-controller-image
    always_run: false
    run_if_changed: "images/shared-images-controller/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-ce"
            - |
              cd images
              ./publish_image.sh -b shared-images-controller quay.io kubevirtci
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "4Gi"
            limits:
              memory: "4Gi"
  - name: build-release-tool-image
    always_run: false
    run_if_changed: "releng/release-tool/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
        - image: quay.io/kubevirtci/golang:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-ce"
            - |
              cd releng/release-tool
              make container-build
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "4Gi"
            limits:
              memory: "4Gi"
  - name: build-kubekins-e2e-image
    always_run: false
    run_if_changed: "images/kubekins-e2e/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              cd images
              ./publish_image.sh -b kubekins-e2e quay.io kubevirtci
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"
  - name: build-kubevirt-kubevirt.github.io-image
    always_run: false
    run_if_changed: "images/kubevirt-kubevirt.github.io/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    cluster: kubevirt-prow-control-plane
    extra_refs:
    - org: kubevirt
      repo: kubevirt.github.io
      base_ref: main
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-ce"
            - |
              cd images
              cp -r ../../kubevirt.github.io/_config kubevirt-kubevirt.github.io
              ./publish_image.sh -b kubevirt-kubevirt.github.io quay.io kubevirtci
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"
  - name: build-kubevirt-user-guide-image
    always_run: false
    run_if_changed: "images/kubevirt-user-guide/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              cd images
              ./publish_image.sh -b kubevirt-user-guide quay.io kubevirtci
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"
  - name: build-prow-deploy-image
    always_run: false
    run_if_changed: "images/prow-deploy/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              cd images
              ./publish_image.sh -b prow-deploy quay.io kubevirtci
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
  - name: build-autoowners-image
    always_run: false
    run_if_changed: "images/autoowners/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    cluster: prow-workloads
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              cd images
              ./publish_image.sh -b autoowners quay.io kubevirtci
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "4Gi"
            limits:
              memory: "4Gi"
  - name: build-pr-creator-image
    always_run: false
    run_if_changed: "images/pr-creator/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    cluster: prow-workloads
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              cd images
              ./publish_multiarch_image.sh -b pr-creator quay.io kubevirtci
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "52Gi"
            limits:
              memory: "52Gi"
  - name: build-vm-image-builder-image
    always_run: false
    run_if_changed: "images/bootstrap/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-ce"
            - "cd images && ./publish_multiarch_image.sh -a -b vm-image-builder quay.io kubevirtci"
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"
  - name: build-fedora-coreos-kubevirt-image
    always_run: false
    run_if_changed: "images/fedora-coreos-kubevirt/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-ce"
            - "cd images && ./publish_image.sh -b fedora-coreos-kubevirt quay.io kubevirtci"
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "4Gi"
            limits:
              memory: "4Gi"
  - name: build-test-label-analyzer-image
    always_run: false
    run_if_changed: "images/test-label-analyzer/.*|robots/.*/test-label-analyzer/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-ce"
            - "cd images && ./publish_image.sh -b test-label-analyzer quay.io kubevirtci"
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"
  - name: build-test-subset-image
    always_run: false
    run_if_changed: "images/test-subset/.*|external-plugins/test-subset/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-ce"
            - "cd images && ./publish_image.sh -b test-subset quay.io kubevirtci"
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"
  - name: pull-project-infra-prow-deploy-test
    always_run: false
    run_if_changed: "github/ci/prow-deploy/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-gcs-credentials: "true"
      preset-pgp-bot-key: "true"
      preset-podman-shared-images: "true"
    cluster: prow-workloads
    extra_refs:
    - org: kubevirt
      repo: kubevirt
      base_ref: main
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - image: quay.io/kubevirtci/prow-deploy:v20241106-e0f89d2
          env:
          - name: GITHUB_TOKEN
            value: "/etc/github/oauth"
          - name: DEPLOY_ENVIRONMENT
            value: "kubevirtci-testing"
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-ce"
            - "github/ci/prow-deploy/hack/test.sh"
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "52Gi"
          volumeMounts:
          - name: molecule-docker
            mountPath: /tmp/prow-deploy-molecule
          - name: unprivileged-token
            mountPath: /etc/github
      volumes:
      - name: molecule-docker
        emptyDir: {}
      - name: unprivileged-token
        secret:
          secretName: unprivileged-oauth-token
  - name: pull-project-infra-ci-search-deploy-test
    optional: false
    run_if_changed: "github/ci/services/ci-search/.*|github/ci/services/common/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
    cluster: prow-workloads
    spec:
      containers:
        - image: quay.io/kubevirtci/golang:v20250320-f6c439c
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/sh"
            - "-ce"
            - |
              # install kind
              curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64
              chmod +x ./kind && mv ./kind /usr/local/bin/kind

              # create test cluster
              kind create cluster --image quay.io/kubevirtci/kindest-node:v1.30.0

              ./github/ci/services/ci-search/hack/deploy.sh testing

              go test ./github/ci/services/ci-search/e2e/...
          env:
          - name: GIMME_GO_VERSION
            value: "1.23.4"
          resources:
            requests:
              memory: "16Gi"
            limits:
              memory: "16Gi"
          securityContext:
            privileged: true
            runAsUser: 0
  - name: pull-project-infra-grafana-deploy-test
    optional: false
    run_if_changed: "github/ci/services/grafana/.*|github/ci/services/common/.*"
    decorate: true
    labels:
      preset-podman-in-container-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-podman-shared-images: "true"
    cluster: prow-workloads
    extra_refs:
    - org: kubevirt
      repo: kubevirt
      base_ref: main
    spec:
      containers:
        - command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-ce"
            - |
              # install kind
              curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64
              chmod +x ./kind && mv ./kind /usr/local/bin/kind

              # create test cluster
              kind create cluster --image quay.io/kubevirtci/kindest-node:v1.30.0
              kubectl cluster-info --context kind-kind
              
              ./github/ci/services/grafana/hack/test.sh
          env:
          - name: GIMME_GO_VERSION
            value: "1.23.4"
          image: quay.io/kubevirtci/golang:v20250320-f6c439c
          resources:
            requests:
              memory: "52Gi"
            limits:
              memory: "52Gi"
          securityContext:
            privileged: true
            runAsUser: 0
  - name: pull-project-infra-check-testgrid-config
    run_if_changed: '^github/ci/prow-deploy/files/jobs/.*$|^github/ci/testgrid/gen-config\.yaml$|^github/ci/testgrid/default\.yaml$'
    decorate: true
    labels:
      preset-bazel-cache: "true"
    annotations:
      testgrid-create-test-group: "false"
    cluster: kubevirt-prow-control-plane
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
    spec:
      containers:
      - image: quay.io/kubevirtci/golang:v20250320-f6c439c
        command:
        - github/ci/testgrid/hack/check.sh
        securityContext:
          runAsUser: 0
        resources:
          requests:
            memory: "8Gi"
          limits:
            memory: "8Gi"
        env:
        - name: GIMME_GO_VERSION
          value: "1.20"
  - name: pull-kubevirt-org-github-config-updater
    run_if_changed: '^github/ci/prow-deploy/kustom/base/configs/current/orgs/orgs\.yaml$'
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-github-credentials: "true"
    decorate: true
    decoration_config:
      timeout: 2h
      grace_period: 5m
    max_concurrency: 1
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
      - name: peribolos
        image: us-docker.pkg.dev/k8s-infra-prow/images/peribolos:v20250318-bb46d5967
        command:
        - /ko-app/peribolos
        # when changing the peribolos settings below, please align the peribolos settings from the periodic job!
        args:
        - --github-endpoint=http://ghproxy
        - --github-endpoint=https://api.github.com
        - --config-path=github/ci/prow-deploy/kustom/base/configs/current/orgs/orgs.yaml
        - --github-token-path=/etc/github/oauth
        - --fix-org=true
        - --fix-org-members=true
        - --fix-repos=true
        - --fix-team-members=true
        - --fix-team-repos=true
        - --fix-teams=true
        - --allow-repo-archival
        - --confirm=false
        resources:
          requests:
            memory: "200Mi"
  - name: pull-prow-kubevirt-labels-update-precheck
    run_if_changed: '^github/ci/prow-deploy/kustom/base/configs/current/labels/labels\.yaml$'
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-github-credentials: "true"
    decorate: true
    decoration_config:
      timeout: 1h
      grace_period: 5m
    max_concurrency: 1
    cluster: kubevirt-prow-control-plane
    spec:
      containers:
      - name: label-sync
        image: gcr.io/k8s-staging-test-infra/label_sync:v20240801-a5d9345e59
        command: [ "/ko-app/label_sync" ]
        args:
        - --config=github/ci/prow-deploy/kustom/base/configs/current/labels/labels.yaml
        - --confirm=false
        - --orgs=kubevirt
        - --token=/etc/github/oauth
      restartPolicy: Never
  - name: pull-prow-nmstate-labels-update-precheck
    run_if_changed: '^github/ci/prow-deploy/kustom/base/configs/current/labels/labels\.yaml$'
    annotations:
      testgrid-create-test-group: "false"
    labels:
      preset-github-credentials: "true"
    decorate: true
    decoration_config:
      timeout: 1h
      grace_period: 5m
    cluster: kubevirt-prow-control-plane
    max_concurrency: 1
    spec:
      containers:
      - name: label-sync
        image: gcr.io/k8s-staging-test-infra/label_sync:v20240801-a5d9345e59
        command: [ "/ko-app/label_sync" ]
        args:
        - --config=github/ci/prow-deploy/kustom/base/configs/current/labels/labels.yaml
        - --confirm=false
        - --only=nmstate/kubernetes-nmstate
        - --token=/etc/github/oauth
      restartPolicy: Never
  - annotations:
      testgrid-create-test-group: "false"
    cluster: kubevirt-prow-control-plane
    decorate: true
    decoration_config:
      timeout: 1h
      grace_period: 5m
    name: pull-project-infra-job-config-validator
    run_if_changed: 'robots/cmd/job-config-validator/.*|go.mod|go.sum'
    spec:
      containers:
      - image: quay.io/kubevirtci/golang:v20250320-f6c439c
        env:
        - name: GIMME_GO_VERSION
          value: "1.23.4"
        command:
        - "/usr/local/bin/runner.sh"
        - "/bin/sh"
        - "-ce"
        - |
          ( cd robots/cmd/job-config-validator && go build ./... )
          ./robots/cmd/job-config-validator/job-config-validator --help
        resources:
          requests:
            memory: "100Mi"
