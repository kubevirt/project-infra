postsubmits:
  kubevirt/project-infra:
    - name: publish-rehearse-image
      always_run: false
      run_if_changed: "external-plugins/rehearse/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      cluster: ibm-prow-jobs
      max_concurrency: 1
      labels:
        preset-dind-enabled: "true"
        preset-docker-mirror-proxy: "true"
        preset-kubevirtci-quay-credential: "true"
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20210126-a12b6c0
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | docker login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                bazelisk run //external-plugins/rehearse/plugin:push
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "8Gi"
              limits:
                memory: "8Gi"
    - name: publish-kubevirt-infra-bootstrap-image
      always_run: false
      run_if_changed: "images/kubevirt-infra-bootstrap/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-dind-enabled: "true"
        preset-docker-mirror-proxy: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: phx-prow
      spec:
        nodeSelector:
          type: vm
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20210311-09ebaa2
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-ce"
              - |
                  cat $QUAY_PASSWORD | docker login --username $(<$QUAY_USER) --password-stdin quay.io
                  cd images
                  ./publish_image.sh kubevirt-infra-bootstrap quay.io kubevirtci
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "1Gi"
              limits:
                memory: "1Gi"
    - name: publish-bootstrap-image
      always_run: false
      run_if_changed: "images/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-dind-enabled: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: phx-prow
      spec:
        nodeSelector:
          type: vm
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20201119-a5880e0
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | docker login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_image.sh bootstrap quay.io kubevirtci
                ./publish_image.sh golang quay.io kubevirtci
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "1Gi"
              limits:
                memory: "1Gi"
    - name: publish-kubekins-e2e-image
      always_run: false
      run_if_changed: "images/kubekins-e2e/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-dind-enabled: "true"
        preset-docker-mirror-proxy: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: phx-prow
      spec:
        nodeSelector:
          type: vm
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20201119-a5880e0
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | docker login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_image.sh kubekins-e2e quay.io kubevirtci
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "1Gi"
              limits:
                memory: "1Gi"
    - name: publish-kubevirt-userguide-image
      always_run: false
      run_if_changed: "images/kubevirt-userguide/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-dind-enabled: "true"
        preset-docker-mirror-proxy: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: phx-prow
      spec:
        nodeSelector:
          type: vm
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20201119-a5880e0
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | docker login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_image.sh kubevirt-userguide quay.io kubevirtci
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "1Gi"
              limits:
                memory: "1Gi"
    - name: publish-prow-deploy-image
      always_run: false
      run_if_changed: "images/prow-deploy/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-dind-enabled: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: phx-prow
      spec:
        nodeSelector:
          type: vm
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20201119-a5880e0
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | docker login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_image.sh prow-deploy quay.io kubevirtci
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "8Gi"
              limits:
                memory: "8Gi"
    - name: post-project-infra-prow-control-plane-deployment
      always_run: false
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      branches:
      - ^master$
      labels:
        preset-docker-mirror-proxy: "true"
      skip_report: false
      cluster: ibm-prow-jobs
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubevirtci/prow-deploy:v20210129-a239273
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/gcs/service-account.json
          - name: GIT_ASKPASS
            value: "/home/prow/go/src/github.com/kubevirt/project-infra/hack/git-askpass.sh"
          - name: DEPLOY_ENVIRONMENT
            value: ibmcloud-production
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - "./github/ci/prow-deploy/hack/deploy.sh"
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
          volumeMounts:
          - name: token
            mountPath: /etc/github
          - name: gcs
            mountPath: /etc/gcs
            readOnly: true
          - name: pgp-bot-key
            mountPath: /etc/pgp
            readOnly: true
        volumes:
        - name: token
          secret:
            secretName: oauth-token
        - name: pgp-bot-key
          secret:
            secretName: pgp-bot-key
        - name: gcs
          secret:
            secretName: gcs
    - name: post-project-infra-prow-workloads-cluster-deployment
      always_run: false
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      branches:
      - ^master$
      labels:
        preset-docker-mirror-proxy: "true"
      skip_report: false
      cluster: ibm-prow-jobs
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubevirtci/prow-deploy:v20210129-a239273
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/gcs/service-account.json
          - name: GIT_ASKPASS
            value: "/home/prow/go/src/github.com/kubevirt/project-infra/hack/git-askpass.sh"
          - name: DEPLOY_ENVIRONMENT
            value: workloads-production
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - "github/ci/prow-deploy/hack/deploy.sh"
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
          volumeMounts:
          - name: token
            mountPath: /etc/github
          - name: gcs
            mountPath: /etc/gcs
            readOnly: true
          - name: pgp-bot-key
            mountPath: /etc/pgp
            readOnly: true
        volumes:
        - name: token
          secret:
            secretName: oauth-token
        - name: pgp-bot-key
          secret:
            secretName: pgp-bot-key
        - name: gcs
          secret:
            secretName: gcs
    - name: post-project-infra-prow-workloads-bootstrap-nodes
      always_run: false
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      branches:
      # regex for semver from https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
      - ^prow-workloads-bootstrap-nodes-v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
      labels:
        preset-docker-mirror-proxy: "true"
      skip_report: false
      cluster: ibm-prow-jobs
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubevirtci/prow-deploy:v20210129-a239273
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/gcs/service-account.json
          - name: GIT_ASKPASS
            value: "/home/prow/go/src/github.com/kubevirt/project-infra/hack/git-askpass.sh"
          - name: DEPLOY_ENVIRONMENT
            value: workloads-production
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - "github/ci/prow-deploy/hack/bootstrap.sh"
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
          volumeMounts:
          - name: token
            mountPath: /etc/github
          - name: gcs
            mountPath: /etc/gcs
            readOnly: true
          - name: pgp-bot-key
            mountPath: /etc/pgp
            readOnly: true
        volumes:
        - name: token
          secret:
            secretName: oauth-token
        - name: pgp-bot-key
          secret:
            secretName: pgp-bot-key
        - name: gcs
          secret:
            secretName: gcs
    - name: post-project-infra-prow-workloads-services-deployment
      always_run: false
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      branches:
      # regex for semver from https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
      - ^prow-workloads-services-v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
      labels:
        preset-docker-mirror-proxy: "true"
      skip_report: false
      cluster: ibm-prow-jobs
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubespray/kubespray:v2.15.0
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/gcs/service-account.json
          - name: GIT_ASKPASS
            value: "./hack/git-askpass.sh"
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - "./github/ci/prow-workloads/hack/deploy.sh"
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
          volumeMounts:
          - name: token
            mountPath: /etc/github
          - name: gcs
            mountPath: /etc/gcs
            readOnly: true
          - name: pgp-bot-key
            mountPath: /etc/pgp
            readOnly: true
        volumes:
        - name: token
          secret:
            secretName: oauth-token
        - name: pgp-bot-key
          secret:
            secretName: pgp-bot-key
        - name: gcs
          secret:
            secretName: gcs
    - name: post-project-infra-cert-manager-deployment
      always_run: false
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      run_if_changed: "github/ci/services/cert-manager.*"
      branches:
      - ^master$
      labels:
        preset-docker-mirror-proxy: "true"
      cluster: ibm-prow-jobs
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubevirtci/bootstrap:v20210311-09ebaa2
          env:
          - name: GIT_ASKPASS
            value: "./hack/git-askpass.sh"
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              # install yq
              curl -Lo ./yq https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64
              chmod +x ./yq && mv ./yq /usr/local/bin/yq

              source ./hack/manage-secrets.sh
              decrypt_secrets
              extract_secret 'kubeconfig' ~/.kube/config

              ./github/ci/services/cert-manager/hack/deploy.sh production-control-plane
              ./github/ci/services/cert-manager/hack/deploy.sh production-e2e-workloads
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
          volumeMounts:
          - name: token
            mountPath: /etc/github
          - name: pgp-bot-key
            mountPath: /etc/pgp
            readOnly: true
        volumes:
        - name: token
          secret:
            secretName: oauth-token
        - name: pgp-bot-key
          secret:
            secretName: pgp-bot-key
    - name: post-project-infra-ci-search-deployment
      always_run: false
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      run_if_changed: "github/ci/services/ci-search.*"
      branches:
      - ^master$
      labels:
        preset-docker-mirror-proxy: "true"
      cluster: ibm-prow-jobs
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubevirtci/bootstrap:v20210311-09ebaa2
          env:
          - name: GIT_ASKPASS
            value: "./hack/git-askpass.sh"
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              # install yq
              curl -Lo ./yq https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64
              chmod +x ./yq && mv ./yq /usr/local/bin/yq

              source ./hack/manage-secrets.sh
              decrypt_secrets
              extract_secret 'kubeconfig' ~/.kube/config
              extract_secret 'bugzilla.apiKey' github/ci/services/ci-search/secrets/production/bugzilla-credentials/api

              ./github/ci/services/ci-search/hack/deploy.sh production
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
          volumeMounts:
          - name: token
            mountPath: /etc/github
          - name: pgp-bot-key
            mountPath: /etc/pgp
            readOnly: true
        volumes:
        - name: token
          secret:
            secretName: oauth-token
        - name: pgp-bot-key
          secret:
            secretName: pgp-bot-key
    - name: post-project-infra-sippy-deployment
      always_run: false
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      run_if_changed: "github/ci/services/sippy.*"
      branches:
      - ^master$
      labels:
        preset-docker-mirror-proxy: "true"
      cluster: ibm-prow-jobs
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubevirtci/bootstrap:v20210112-b29dfd7
          env:
          - name: GIT_ASKPASS
            value: "./hack/git-askpass.sh"
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              # install yq
              curl -Lo ./yq https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64
              chmod +x ./yq && mv ./yq /usr/local/bin/yq

              source ./hack/manage-secrets.sh
              decrypt_secrets
              extract_secret 'kubeconfig' ~/.kube/config

              ./github/ci/services/sippy/hack/deploy.sh production
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
          volumeMounts:
          - name: token
            mountPath: /etc/github
          - name: pgp-bot-key
            mountPath: /etc/pgp
            readOnly: true
        volumes:
        - name: token
          secret:
            secretName: oauth-token
        - name: pgp-bot-key
          secret:
            secretName: pgp-bot-key
    - name: post-project-infra-prometheus-stack-deployment
      always_run: false
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      run_if_changed: "github/ci/services/prometheus-stack.*"
      branches:
      - ^master$
      labels:
        preset-docker-mirror-proxy: "true"
      cluster: ibm-prow-jobs
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubevirtci/bootstrap:v20210112-b29dfd7
          env:
          - name: GIT_ASKPASS
            value: "./hack/git-askpass.sh"
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              # install yq
              curl -Lo ./yq https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64
              chmod +x ./yq && mv ./yq /usr/local/bin/yq

              source ./hack/manage-secrets.sh
              decrypt_secrets

              extract_secret 'kubeconfig' ~/.kube/config
              extract_secret 'grafanaUser' ./github/ci/services/prometheus-stack/secrets/production-control-plane/grafana/admin-user
              extract_secret 'grafanaPassword' ./github/ci/services/prometheus-stack/secrets/production-control-plane/grafana/admin-password
              extract_secret 'grafanaLDAPTOML' ./github/ci/services/prometheus-stack/secrets/production-control-plane/grafana/ldap-toml

              ./github/ci/services/prometheus-stack/hack/deploy.sh production-control-plane
              ./github/ci/services/prometheus-stack/hack/deploy.sh production-e2e-workloads
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
          volumeMounts:
          - name: token
            mountPath: /etc/github
          - name: pgp-bot-key
            mountPath: /etc/pgp
            readOnly: true
        volumes:
        - name: token
          secret:
            secretName: oauth-token
        - name: pgp-bot-key
          secret:
            secretName: pgp-bot-key
    - name: post-project-infra-kuberhealthy-deployment
      always_run: false
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      run_if_changed: "github/ci/services/kuberhealthy.*"
      branches:
      - ^master$
      labels:
        preset-docker-mirror-proxy: "true"
      cluster: ibm-prow-jobs
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubevirtci/bootstrap:v20210112-b29dfd7
          env:
          - name: GIT_ASKPASS
            value: "./hack/git-askpass.sh"
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              # install yq
              curl -Lo ./yq https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64
              chmod +x ./yq && mv ./yq /usr/local/bin/yq

              source ./hack/manage-secrets.sh
              decrypt_secrets

              extract_secret 'kubeconfig' ~/.kube/config

              ./github/ci/services/kuberhealthy/hack/deploy.sh production
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
          volumeMounts:
          - name: token
            mountPath: /etc/github
          - name: pgp-bot-key
            mountPath: /etc/pgp
            readOnly: true
        volumes:
        - name: token
          secret:
            secretName: oauth-token
        - name: pgp-bot-key
          secret:
            secretName: pgp-bot-key
    - name: post-project-infra-update-testgrid-config
      run_if_changed: '^github/ci/prow-deploy/files/jobs/.*$|^github/ci/testgrid/gen-config\.yaml$|^github/ci/testgrid/default\.yaml$'
      branches:
      - master
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      cluster: ibm-prow-jobs
      spec:
        containers:
        - image: gcr.io/k8s-prow/configurator:v20210526-1d9416cb76
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/gcs/service-account.json
          command:
          - /app/testgrid/cmd/configurator/app.binary
          args:
          - --prow-config=github/ci/prow-deploy/files/config.yaml
          - --prow-job-config=github/ci/prow-deploy/files/jobs
          - --yaml=github/ci/testgrid/gen-config.yaml
          - --default=github/ci/testgrid/default.yaml
          - --oneshot
          - --update-description
          - --output=gs://kubevirt-prow/testgrid/config
          resources:
            requests:
              memory: "1Gi"
          volumeMounts:
          - name: gcs
            mountPath: /etc/gcs
        volumes:
        - name: gcs
          secret:
            secretName: gcs
