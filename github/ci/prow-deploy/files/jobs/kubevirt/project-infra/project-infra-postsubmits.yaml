postsubmits:
  kubevirt/project-infra:
    - name: publish-rehearse-image
      always_run: false
      run_if_changed: "external-plugins/rehearse/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      cluster: kubevirt-prow-control-plane
      max_concurrency: 1
      labels:
        preset-bazel-cache: "true"
        preset-kubevirtci-quay-credential: "true"
        preset-podman-in-container-enabled: "true"
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                make -C external-plugins/rehearse push
            resources:
              requests:
                memory: "8Gi"
              limits:
                memory: "8Gi"
            securityContext:
              privileged: true
    - name: publish-phased-plugin-image
      always_run: false
      run_if_changed: "external-plugins/phased/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      cluster: kubevirt-prow-control-plane
      max_concurrency: 1
      labels:
        preset-bazel-cache: "true"
        preset-kubevirtci-quay-credential: "true"
        preset-podman-in-container-enabled: "true"
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                make -C external-plugins/phased push
            resources:
              requests:
                memory: "8Gi"
              limits:
                memory: "8Gi"
            securityContext:
              privileged: true
    - name: publish-release-blocker-image
      always_run: false
      run_if_changed: "external-plugins/release-blocker/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      cluster: kubevirt-prow-control-plane
      max_concurrency: 1
      labels:
        preset-bazel-cache: "true"
        preset-kubevirtci-quay-credential: "true"
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                bazelisk run //external-plugins/release-blocker:push
            resources:
              requests:
                memory: "8Gi"
              limits:
                memory: "8Gi"
    - name: publish-botreview-image
      always_run: false
      run_if_changed: "external-plugins/botreview/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      cluster: kubevirt-prow-control-plane
      max_concurrency: 1
      labels:
        preset-bazel-cache: "true"
        preset-kubevirtci-quay-credential: "true"
        preset-podman-in-container-enabled: "true"
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                make -C ./external-plugins/botreview push
            resources:
              requests:
                memory: "8Gi"
              limits:
                memory: "8Gi"
            securityContext:
              privileged: true
    - name: publish-referee-image
      always_run: false
      run_if_changed: "^(external-plugins|images)/referee/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      cluster: kubevirt-prow-control-plane
      max_concurrency: 1
      labels:
        preset-bazel-cache: "true"
        preset-kubevirtci-quay-credential: "true"
        preset-podman-in-container-enabled: "true"
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                make -C ./external-plugins/referee push
            resources:
              requests:
                memory: "8Gi"
              limits:
                memory: "8Gi"
            securityContext:
              privileged: true
    - name: publish-kubevirt-infra-bootstrap-image
      always_run: false
      run_if_changed: "images/kubevirt-infra-bootstrap/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-podman-in-container-enabled: "true"
        preset-docker-mirror-proxy: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: kubevirt-prow-control-plane
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-ce"
              - |
                  cat $QUAY_PASSWORD | podman login --username $(<$QUAY_USER) --password-stdin quay.io
                  cd images
                  ./publish_image.sh kubevirt-infra-bootstrap quay.io kubevirtci
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "1Gi"
              limits:
                memory: "1Gi"
    - name: publish-bootstrap-image
      always_run: false
      run_if_changed: "images/golang/.*|images/bootstrap/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      decoration_config:
        grace_period: 5m0s
        timeout: 5h0m0s
      max_concurrency: 1
      labels:
        preset-podman-in-container-enabled: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: kubevirt-prow-workloads
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_multiarch_image.sh  bootstrap quay.io kubevirtci
                ./publish_multiarch_image.sh -l golang quay.io kubevirtci
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "29Gi"
              limits:
                memory: "29Gi"
    - name: publish-bootstrap-legacy-images
      always_run: false
      run_if_changed: "images/golang-legacy/.*|images/bootstrap-legacy/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      decoration_config:
        grace_period: 5m0s
        timeout: 5h0m0s
      max_concurrency: 1
      labels:
        preset-podman-in-container-enabled: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: kubevirt-prow-workloads
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_multiarch_image.sh bootstrap-legacy quay.io kubevirtci
                ./publish_multiarch_image.sh -l golang-legacy quay.io kubevirtci
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "29Gi"
              limits:
                memory: "29Gi"
    - name: publish-shared-images-controller-image
      always_run: false
      run_if_changed: "images/shared-images-controller/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-podman-in-container-enabled: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: kubevirt-prow-control-plane
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_image.sh shared-images-controller quay.io kubevirtci
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "4Gi"
              limits:
                memory: "4Gi"
    - name: publish-kubekins-e2e-image
      always_run: false
      run_if_changed: "images/kubekins-e2e/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-podman-in-container-enabled: "true"
        preset-docker-mirror-proxy: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: kubevirt-prow-control-plane
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_image.sh kubekins-e2e quay.io kubevirtci
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "1Gi"
              limits:
                memory: "1Gi"
    - name: publish-kubevirt-kubevirt.github.io-image
      always_run: false
      run_if_changed: "images/kubevirt-kubevirt.github.io/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-podman-in-container-enabled: "true"
        preset-docker-mirror-proxy: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: kubevirt-prow-control-plane
      extra_refs:
      - org: kubevirt
        repo: kubevirt.github.io
        base_ref: main
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                cp -r ../../kubevirt.github.io/_config kubevirt-kubevirt.github.io
                ./publish_image.sh kubevirt-kubevirt.github.io quay.io kubevirtci
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "1Gi"
              limits:
                memory: "1Gi"
    - name: publish-kubevirt-user-guide-image
      always_run: false
      run_if_changed: "images/kubevirt-user-guide/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-dind-enabled: "true"
        preset-docker-mirror-proxy: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: kubevirt-prow-control-plane
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_image.sh kubevirt-user-guide quay.io kubevirtci
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "1Gi"
              limits:
                memory: "1Gi"
    - name: publish-prow-deploy-image
      always_run: false
      run_if_changed: "images/prow-deploy/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-podman-in-container-enabled: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: kubevirt-prow-control-plane
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_image.sh prow-deploy quay.io kubevirtci
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "8Gi"
              limits:
                memory: "8Gi"
    - name: publish-autoowners-image
      always_run: false
      run_if_changed: "images/autoowners/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-podman-in-container-enabled: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: kubevirt-prow-workloads
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_image.sh autoowners quay.io kubevirtci
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "4Gi"
              limits:
                memory: "4Gi"
    - name: publish-pr-creator-image
      always_run: false
      run_if_changed: "images/pr-creator/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-podman-in-container-enabled: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: kubevirt-prow-workloads
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_image.sh pr-creator quay.io kubevirtci
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "16Gi"
                cpu: "500m"
              limits:
                memory: "16Gi"
                cpu: "500m"
    - name: publish-vm-image-builder-image
      always_run: false
      run_if_changed: "images/vm-image-builder/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      decoration_config:
        grace_period: 5m0s
        timeout: 5h0m0s
      max_concurrency: 1
      labels:
        preset-podman-in-container-enabled: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: kubevirt-prow-workloads
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_multiarch_image.sh vm-image-builder quay.io kubevirtci
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "29Gi"
              limits:
                memory: "29Gi"
    - name: publish-fedora-coreos-kubevirt-image
      always_run: false
      run_if_changed: "images/fedora-coreos-kubevirt/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      labels:
        preset-podman-in-container-enabled: "true"
        preset-kubevirtci-quay-credential: "true"
      cluster: kubevirt-prow-control-plane
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | docker login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_image.sh fedora-coreos-kubevirt quay.io kubevirtci
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "4Gi"
              limits:
                memory: "4Gi"
    - name: post-project-infra-kubevirt-prow-control-plane-deployment
      always_run: false
      run_if_changed: "github/ci/prow-deploy/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      branches:
      - ^main$
      labels:
        preset-docker-mirror-proxy: "true"
        preset-gcs-credentials: "true"
        preset-github-credentials: "true"
        preset-pgp-bot-key: "true"
      skip_report: false
      cluster: kubevirt-prow-control-plane
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubevirtci/prow-deploy:v20231116-40070ee
          env:
          - name: DEPLOY_ENVIRONMENT
            value: kubevirt-prow-control-plane
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - "./github/ci/prow-deploy/hack/deploy.sh"
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
    - name: post-project-infra-kubevirt-prow-workloads-deployment
      always_run: false
      run_if_changed: "github/ci/prow-deploy/kustom/overlays/kubevirt-prow-workloads/.*|github/ci/prow-deploy/kustom/components/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      branches:
      - ^main$
      labels:
        preset-docker-mirror-proxy: "true"
        preset-gcs-credentials: "true"
        preset-github-credentials: "true"
        preset-pgp-bot-key: "true"
      skip_report: false
      cluster: kubevirt-prow-control-plane
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubevirtci/prow-deploy:v20231116-40070ee
          env:
          - name: DEPLOY_ENVIRONMENT
            value: kubevirt-prow-workloads
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - "github/ci/prow-deploy/hack/deploy.sh"
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
    - name: post-project-infra-ci-search-deployment
      always_run: false
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      run_if_changed: "github/ci/services/ci-search.*"
      branches:
      - ^main$
      labels:
        preset-docker-mirror-proxy: "true"
        preset-github-credentials: "true"
        preset-pgp-bot-key: "true"
      cluster: kubevirt-prow-control-plane
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              # install yq
              curl -Lo ./yq https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64
              chmod +x ./yq && mv ./yq /usr/local/bin/yq

              source ./hack/manage-secrets.sh
              decrypt_secrets
              extract_secret 'kubeconfig' ~/.kube/config
              extract_secret 'bugzilla.apiKey' github/ci/services/ci-search/secrets/production/bugzilla-credentials/api

              ./github/ci/services/ci-search/hack/deploy.sh production
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
    - name: post-project-infra-grafana-deployment
      always_run: false
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      run_if_changed: "github/ci/services/grafana/.*"
      branches:
      - ^main$
      labels:
        preset-docker-mirror-proxy: "true"
        preset-github-credentials: "true"
        preset-pgp-bot-key: "true"
      cluster: kubevirt-prow-control-plane
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              # install yq
              curl -Lo ./yq https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64
              chmod +x ./yq && mv ./yq /usr/local/bin/yq

              source ./hack/manage-secrets.sh
              decrypt_secrets
              extract_secret 'kubeconfig' ~/.kube/config
              extract_secret 'grafanaUser' github/ci/services/grafana/secrets/kubevirt-prow-control-plane/grafana/admin-user
              extract_secret 'grafanaPassword' github/ci/services/grafana/secrets/kubevirt-prow-control-plane/grafana/admin-password
              extract_secret 'grafanaPromToken' github/ci/services/grafana/secrets/kubevirt-prow-control-plane/grafana/prom_bearer_token
              extract_secret 'grafanaClientID' github/ci/services/grafana/secrets/kubevirt-prow-control-plane/grafana/client-id
              extract_secret 'grafanaClientSecret' github/ci/services/grafana/secrets/kubevirt-prow-control-plane/grafana/client-secret

              ./github/ci/services/grafana/hack/deploy.sh kubevirt-prow-control-plane
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
    - name: post-project-infra-update-testgrid-config
      run_if_changed: '^github/ci/prow-deploy/files/jobs/.*$|^github/ci/testgrid/gen-config\.yaml$|^github/ci/testgrid/default\.yaml$'
      branches:
      - main
      annotations:
        testgrid-create-test-group: "false"
      labels:
        preset-gcs-credentials: "true"
      decorate: true
      cluster: kubevirt-prow-control-plane
      spec:
        containers:
        - image: gcr.io/k8s-prow/configurator:v20240327-a58d781f5a
          command:
          - /ko-app/configurator
          args:
          - --prow-config=github/ci/prow-deploy/files/config.yaml
          - --prow-job-config=github/ci/prow-deploy/files/jobs
          - --yaml=github/ci/testgrid/gen-config.yaml
          - --default=github/ci/testgrid/default.yaml
          - --oneshot
          - --update-description
          - --output=gs://kubevirt-prow/testgrid/config
          resources:
            requests:
              memory: "1Gi"
    - name: publish-ci-usage-exporter-image
      always_run: false
      run_if_changed: "robots/.*/ci-usage-exporter/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      cluster: kubevirt-prow-control-plane
      max_concurrency: 1
      labels:
        preset-kubevirtci-quay-credential: "true"
        preset-bazel-cache: "true"
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                bazelisk run //robots/cmd/ci-usage-exporter:push
            resources:
              requests:
                memory: "8Gi"
              limits:
                memory: "8Gi"
    - name: publish-test-report-image
      always_run: false
      run_if_changed: "robots/.*/test-report/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      cluster: kubevirt-prow-control-plane
      max_concurrency: 1
      labels:
        preset-podman-in-container-enabled: "true"
        preset-kubevirtci-quay-credential: "true"
        preset-bazel-cache: "true"
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                make -C ./robots/cmd/test-report push
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "8Gi"
              limits:
                memory: "8Gi"
    - name: publish-test-label-analyzer-image
      always_run: false
      run_if_changed: "images/test-label-analyzer/.*|robots/.*/test-label-analyzer/.*"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      cluster: kubevirt-prow-control-plane
      max_concurrency: 1
      labels:
        preset-podman-in-container-enabled: "true"
        preset-kubevirtci-quay-credential: "true"
        preset-bazel-cache: "true"
      spec:
        containers:
          - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - |
                cat "$QUAY_PASSWORD" | docker login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
                cd images
                ./publish_image.sh test-label-analyzer quay.io kubevirtci
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "1Gi"
              limits:
                memory: "1Gi"
    - name: post-project-infra-mirror-images-from-docker-hub
      always_run: false
      run_if_changed: "hack/mirror-images.sh|hack/images_to_mirror.csv"
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      cluster: kubevirt-prow-control-plane
      labels:
        preset-kubevirtci-quay-credential: "true"
        preset-docker-mirror-proxy: "true"
      spec:
        containers:
        - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
          command: ["/bin/sh"]
          args:
          - -c
          - |
            set -e

            cat "$QUAY_PASSWORD" | podman login --username $(cat "$QUAY_USER") --password-stdin=true quay.io
            hack/mirror-images.sh
          resources:
            requests:
              memory: "200Mi"
            limits:
              memory: "200Mi"
          securityContext:
            privileged: true
    - name: post-project-infra-kubevirt-e2e-jobs-overview
      always_run: false
      annotations:
        testgrid-create-test-group: "false"
      cluster: kubevirt-prow-control-plane
      decorate: true
      decoration_config:
        grace_period: 5m
        timeout: 1h
      labels:
        preset-gcs-credentials: "true"
      max_concurrency: 1
      run_if_changed: "github/ci/prow-deploy/files/jobs/kubevirt/kubevirt/kubevirt-(periodics|presubmits).yaml"
      spec:
        securityContext:
          runAsUser: 0
        containers:
        - image: quay.io/kubevirtci/bootstrap:v20240308-8fac017
          env:
          command:
          - /usr/local/bin/runner.sh
          - /bin/sh
          - -c
          args:
          - |
            # we fetch presubmits for kubevirt/kubevirt branches main and release-0.59
            bazel run //robots/cmd/kubevirt:kubevirt -- get presubmits --job-config-path-kubevirt-presubmits $(pwd)/github/ci/prow-deploy/files/jobs/kubevirt/kubevirt/kubevirt-presubmits.yaml --job-config-path-kubevirt-presubmits $(pwd)/github/ci/prow-deploy/files/jobs/kubevirt/kubevirt/kubevirt-presubmits-0.59.yaml --github-token-path '' --output-file /tmp/presubmits.html
            bazel run //robots/cmd/kubevirt:kubevirt -- get periodics --job-config-path-kubevirt-periodics $(pwd)/github/ci/prow-deploy/files/jobs/kubevirt/kubevirt/kubevirt-periodics.yaml --github-token-path '' --output-file /tmp/periodics.html
            gsutil cp /tmp/presubmits.html /tmp/periodics.html gs://kubevirt-prow/reports/e2ejobs/kubevirt/kubevirt
          resources:
            requests:
              memory: "200Mi"

