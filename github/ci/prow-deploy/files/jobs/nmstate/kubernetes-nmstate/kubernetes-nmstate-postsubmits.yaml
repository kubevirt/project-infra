postsubmits:
  nmstate/kubernetes-nmstate:
    - name: pull-kubernetes-nmstate-e2e-handler-k8s-future
      annotations:
        testgrid-alert-email: ellorent@redhat.com, rhrazdil@redhat.com
        testgrid-dashboards: kubevirt-kubernetes-nmstate-future
      branches:
        - main
      always_run: true
      decorate: true
      decoration_config:
        timeout: 3h
        grace_period: 5m
      max_concurrency: 6
      labels:
        preset-podman-in-container-enabled: "true"
        preset-docker-mirror-proxy: "true"
        preset-shared-images: "true"
      cluster: prow-workloads
      spec:
        nodeSelector:
          type: bare-metal-external
        containers:
          - image: quay.io/kubevirtci/golang:v20220823-3fed276
            securityContext:
              privileged: true
            resources:
              requests:
                memory: "29Gi"
            env:
              - name: GIMME_GO_VERSION
                value: "1.16"
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/sh"
              - "-c"
              - "git pull --rebase https://github.com/qinqon/kubernetes-nmstate use-nmstatectl-rust && NMSTATE_PIN=future automation/check-patch.e2e-k8s.sh"
    - name: publish-kubernetes-nmstate
      skip_branches:
        - gh-pages
        - release*
      always_run: true
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      extra_refs:
      - org: kubevirt
        repo: project-infra
        base_ref: main
      labels:
        preset-podman-in-container-enabled: "true"
        preset-docker-mirror-proxy: "true"
        preset-kubevirtci-quay-credential: "true"
      branches:
        - main
      cluster: ibm-prow-jobs
      spec:
        containers:
          - image: quay.io/kubevirtci/golang:v20220823-3fed276
            env:
            - name: GIT_ASKPASS
              value: "/home/prow/go/src/github.com/kubevirt/project-infra/hack/git-askpass.sh"
            - name: GITHUB_USER
              value: kubevirt-bot
            - name: GITHUB_EMAIL
              value: kubevirtbot@redhat.com
            - name: GIMME_GO_VERSION
              value: "1.16"
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - "cat $QUAY_PASSWORD | docker login --username $(cat $QUAY_USER) --password-stdin=true quay.io && ./automation/publish.sh"
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            volumeMounts:
              - name: github-token
                mountPath: /etc/github
        volumes:
          - name: github-token
            secret:
              secretName: oauth-token

    - name: release-kubernetes-nmstate
      annotations:
        testgrid-create-test-group: "false"
      decorate: true
      max_concurrency: 1
      extra_refs:
      - org: kubevirt
        repo: project-infra
        base_ref: main
      labels:
        preset-podman-in-container-enabled: "true"
        preset-docker-mirror-proxy: "true"
        preset-kubevirtci-quay-credential: "true"
      branches:
        - ^v\d+\.\d+\.\d+$
      cluster: ibm-prow-jobs
      spec:
        containers:
          - image: quay.io/kubevirtci/golang:v20220823-3fed276
            env:
            - name: GIT_ASKPASS
              value: "/home/prow/go/src/github.com/kubevirt/project-infra/hack/git-askpass.sh"
            - name: GITHUB_USER
              value: kubevirt-bot
            - name: GITHUB_EMAIL
              value: kubevirtbot@redhat.com
            - name: GIMME_GO_VERSION
              value: "1.16"
            command:
              - "/usr/local/bin/runner.sh"
              - "/bin/bash"
              - "-c"
              - "cat $QUAY_PASSWORD | docker login --username $(cat $QUAY_USER) --password-stdin=true quay.io && GITHUB_TOKEN=$(cat /etc/github/oauth) ./automation/release.sh"
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            volumeMounts:
              - name: github-token
                mountPath: /etc/github
        volumes:
          - name: github-token
            secret:
              secretName: oauth-token
