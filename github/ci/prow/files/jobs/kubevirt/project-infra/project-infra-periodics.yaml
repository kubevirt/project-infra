periodics:
- name: periodic-project-infra-retester
  interval: 1h  # Retest at most 1 PR every hour, which should not DOS the queue.
  decorate: true
  annotations:
    testgrid-create-test-group: "false"
  spec:
    containers:
    - image: gcr.io/k8s-prow/commenter:v20200623-9f5410055c
      command:
      - /app/robots/commenter/app.binary
      args:
      - |-
        --query=is:pr
        -label:do-not-merge
        -label:do-not-merge/blocked-paths
        -label:do-not-merge/cherry-pick-not-approved
        -label:do-not-merge/hold
        -label:do-not-merge/invalid-owners-file
        -label:do-not-merge/release-note-label-needed
        -label:do-not-merge/work-in-progress
        label:lgtm
        label:approved
        status:failure
        -label:needs-rebase
        -label:needs-ok-to-test
        repo:kubevirt/kubevirt
      - --token=/etc/github/oauth
      - |-
        --comment=/retest
        This bot automatically retries jobs that failed/flaked on approved PRs.
        Silence the bot with an `/lgtm cancel` or `/hold` comment for consistent failures.
      - --template
      - --ceiling=1
      - --confirm
      volumeMounts:
      - name: token
        mountPath: /etc/github
    volumes:
    - name: token
      secret:
        secretName:  commenter-oauth-token
- name: periodic-test-infra-close
  interval: 1h
  annotations:
    testgrid-create-test-group: "false"
  decorate: true
  spec:
    nodeSelector:
      type: vm
      zone: ci
    containers:
    - image: gcr.io/k8s-prow/commenter:v20200623-9f5410055c
      command:
      - /app/robots/commenter/app.binary
      args:
      - |-
        --query=org:kubevirt
        -label:lifecycle/frozen
        label:lifecycle/rotten
      - --updated=720h
      - --token=/etc/github/oauth
      - |-
        --comment=Rotten issues close after 30d of inactivity.
        Reopen the issue with `/reopen`.
        Mark the issue as fresh with `/remove-lifecycle rotten`.

        /close
      - --template
      - --ceiling=10
      - --confirm
      volumeMounts:
      - name: token
        mountPath: /etc/github
    volumes:
    - name: token
      secret:
        secretName: oauth-token

- name: periodic-test-infra-close-build-watcher-triage
  interval: 1h
  annotations:
    testgrid-create-test-group: "false"
  decorate: true
  spec:
    nodeSelector:
      type: vm
      zone: ci
    containers:
    - image: gcr.io/k8s-prow/commenter:v20200623-9f5410055c
      command:
      - /app/robots/commenter/app.binary
      args:
      - |-
        --query=org:kubevirt
        -label:lifecycle/frozen
        label:triage/build-watcher
      - --updated=336h
      - --token=/etc/github/oauth
      - |-
        --comment=Issues triaged by the build watcher close after 14d of inactivity.
        Reopen the issue with `/reopen`.

        /close
      - --template
      - --ceiling=10
      - --confirm
      volumeMounts:
      - name: token
        mountPath: /etc/github
    volumes:
    - name: token
      secret:
        secretName: oauth-token

- name: periodic-test-infra-rotten
  interval: 1h
  annotations:
    testgrid-create-test-group: "false"
  decorate: true
  spec:
    nodeSelector:
      type: vm
      zone: ci
    containers:
    - image: gcr.io/k8s-prow/commenter:v20200623-9f5410055c
      command:
      - /app/robots/commenter/app.binary
      args:
      - |-
        --query=org:kubevirt
        -label:lifecycle/frozen
        label:lifecycle/stale
        -label:lifecycle/rotten
      - --updated=720h
      - --token=/etc/github/oauth
      - |-
        --comment=Stale issues rot after 30d of inactivity.
        Mark the issue as fresh with `/remove-lifecycle rotten`.
        Rotten issues close after an additional 30d of inactivity.

        If this issue is safe to close now please do so with `/close`.

        /lifecycle rotten
      - --template
      - --ceiling=10
      - --confirm
      volumeMounts:
      - name: token
        mountPath: /etc/github
    volumes:
    - name: token
      secret:
        secretName: oauth-token

- name: periodic-test-infra-stale
  interval: 1h
  annotations:
    testgrid-create-test-group: "false"
  decorate: true
  spec:
    nodeSelector:
      type: vm
      zone: ci
    containers:
    - image: gcr.io/k8s-prow/commenter:v20200623-9f5410055c
      command:
      - /app/robots/commenter/app.binary
      args:
      - |-
        --query=org:kubevirt
        -label:lifecycle/frozen
        -label:lifecycle/stale
        -label:lifecycle/rotten
      - --updated=2160h
      - --token=/etc/github/oauth
      - |-
        --comment=Issues go stale after 90d of inactivity.
        Mark the issue as fresh with `/remove-lifecycle stale`.
        Stale issues rot after an additional 30d of inactivity and eventually close.

        If this issue is safe to close now please do so with `/close`.

        /lifecycle stale
      - --template
      - --ceiling=10
      - --confirm
      volumeMounts:
      - name: token
        mountPath: /etc/github
    volumes:
    - name: token
      secret:
        secretName: oauth-token
- name: periodic-project-infra-autoowners
  interval: 24h
  annotations:
    testgrid-create-test-group: "false"
  decorate: true
  extra_refs:
  - org: kubevirt
    repo: project-infra
    base_ref: master
    work_dir: true
  spec:
    containers:
    - image: quay.io/kubevirtci/autoowners@sha256:c40b91c8452aba2c2966facd054dad1a8f9a55a9f34779c7afd3ece0da8e3633
      env:
      - name: GIT_ASKPASS
        value: "./hack/git-askpass.sh"
      command:
      - "autoowners"
      args:
      - --dry-run=false
      - --self-approve=true
      - --github-login=kubevirt-bot
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --org=kubevirt
      - --repo=project-infra
      - --target-dir=.
      - --target-subdir=github/ci/prow/files
      - --config-subdir=jobs
      - --github-token-path=/etc/github/oauth
      - --git-signoff=true
      volumeMounts:
      - name: token
        mountPath: /etc/github
    volumes:
    - name: token
      secret:
        secretName: oauth-token
- name: periodic-update-flakefinder-indexpage
  interval: 24h
  annotations:
    testgrid-create-test-group: "false"
  decorate: true
  spec:
    nodeSelector:
      type: vm
      zone: ci
    containers:
      - image: index.docker.io/kubevirtci/indexpagecreator@sha256:bbdf645306c9bce0f03c7446317043656429b9bec951d5d2f102138ac3f99e61
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/gcs/service-account.json
        command:
          - "/app/robots/indexpagecreator/app.binary"
        args:
          - --dry-run=false
        volumeMounts:
          - name: gcs
            mountPath: /etc/gcs
            readOnly: true
    volumes:
      - name: gcs
        secret:
          secretName: gcs

- name: periodic-kubevirt-mirror-uploader
  cron: "05 7 * * *"
  max_concurrency: 1
  annotations:
    testgrid-create-test-group: "false"
  decorate: true
  decoration_config:
    timeout: 1h
    grace_period: 5m
  extra_refs:
  - org: kubevirt
    repo: project-infra
    base_ref: master
    workdir: true
  - org: kubevirt
    repo: kubevirt
    base_ref: master
  - org: kubevirt
    repo: containerized-data-importer
    base_ref: master
  spec:
    securityContext:
      runAsUser: 0
    containers:
      - image: "kubevirt/builder@sha256:e6a76ec71f2de87c3bc648bae87ab43a113540bf57da69f07f76bd0edfd500ab"
        env:
        - name: GIT_ASKPASS
          value: ../project-infra/hack/git-askpass.sh
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/gcs/service-account.json
        command: ["/bin/sh"]
        args:
          - "-c"
          - bazel_dir=$(mktemp -d) &&
            curl --fail -L https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-amd64 --output ${bazel_dir}/bazelisk &&
            chmod a+x ${bazel_dir}/bazelisk &&
            export PATH=${PATH}:${bazel_dir} &&
            hack/git-pr.sh -c "bazelisk run //plugins/cmd/uploader:uploader -- -workspace ${PWD}/../kubevirt/WORKSPACE -dry-run=false" -p ../kubevirt -r kubevirt &&
            hack/git-pr.sh -c "bazelisk run //plugins/cmd/uploader:uploader -- -workspace ${PWD}/../containerized-data-importer/WORKSPACE -dry-run=false" -p ../containerized-data-importer -r containerized-data-importer
        volumeMounts:
        - name: token
          mountPath: /etc/github
        - name: gcs
          mountPath: /etc/gcs
          readOnly: true
        resources:
          requests:
            memory: "200Mi"
    volumes:
    - name: token
      secret:
        secretName: oauth-token
    - name: gcs
      secret:
        secretName: gcs
- name: periodic-kubevirtci-cluster-patchversion-updater
  interval: 24h
  max_concurrency: 1
  annotations:
    testgrid-create-test-group: "false"
  decorate: true
  decoration_config:
    timeout: 1h
    grace_period: 5m
  extra_refs:
  - org: kubevirt
    repo: project-infra
    base_ref: master
    workdir: true
  - org: kubevirt
    repo: kubevirtci
    base_ref: master
  spec:
    securityContext:
      runAsUser: 0
    containers:
      - image: "kubevirt/builder@sha256:e6a76ec71f2de87c3bc648bae87ab43a113540bf57da69f07f76bd0edfd500ab"
        env:
        - name: GIT_ASKPASS
          value: ../project-infra/hack/git-askpass.sh
        command: ["/bin/sh"]
        args:
          - "-c"
          - bazel_dir=$(mktemp -d) &&
            curl --fail -L https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-amd64 --output ${bazel_dir}/bazelisk &&
            chmod a+x ${bazel_dir}/bazelisk &&
            export PATH=${PATH}:${bazel_dir} &&
            hack/git-pr.sh -c "bazelisk run //robots/kubevirtci-bumper:kubevirtci-bumper -- -ensure-last-three-minor-of v1 --k8s-provider-dir ${PWD}/../kubevirtci/cluster-provision/k8s" -p ../kubevirtci -r kubevirtci -b patch-version-bump
        volumeMounts:
        - name: token
          mountPath: /etc/github
        resources:
          requests:
            memory: "200Mi"
    volumes:
    - name: token
      secret:
        secretName: oauth-token
- name: periodic-kubevirtci-cluster-minorversion-updater
  interval: 24h
  max_concurrency: 1
  annotations:
    testgrid-create-test-group: "false"
  decorate: true
  decoration_config:
    timeout: 1h
    grace_period: 5m
  extra_refs:
  - org: kubevirt
    repo: project-infra
    base_ref: master
    workdir: true
  - org: kubevirt
    repo: kubevirtci
    base_ref: master
  spec:
    securityContext:
      runAsUser: 0
    containers:
      - image: "kubevirt/builder@sha256:e6a76ec71f2de87c3bc648bae87ab43a113540bf57da69f07f76bd0edfd500ab"
        env:
        - name: GIT_ASKPASS
          value: ../project-infra/hack/git-askpass.sh
        command: ["/bin/sh"]
        args:
          - "-c"
          - bazel_dir=$(mktemp -d) &&
            curl --fail -L https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-amd64 --output ${bazel_dir}/bazelisk &&
            chmod a+x ${bazel_dir}/bazelisk &&
            export PATH=${PATH}:${bazel_dir} &&
            hack/git-pr.sh -c "bazelisk run //robots/kubevirtci-bumper:kubevirtci-bumper -- -ensure-latest --k8s-provider-dir ${PWD}/../kubevirtci/cluster-provision/k8s" -p ../kubevirtci -r kubevirtci -b minor-version-bump
        volumeMounts:
        - name: token
          mountPath: /etc/github
        resources:
          requests:
            memory: "200Mi"
    volumes:
    - name: token
      secret:
        secretName: oauth-token
