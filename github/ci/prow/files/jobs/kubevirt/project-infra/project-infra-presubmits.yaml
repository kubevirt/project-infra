presubmits:
  kubevirt/project-infra:
  - name: check-prow-config
    always_run: true
    decorate: true
    spec:
      nodeSelector:
        type: vm
        zone: ci
      containers:
      - image: gcr.io/k8s-prow/checkconfig:v20200623-9f5410055c
        args:
        - "/checkconfig"
        - "--config-path"
        - "github/ci/prow/files/config.yaml"
        - "--job-config-path"
        - "github/ci/prow/files/jobs"
        - "--plugin-config"
        - "github/ci/prow/files/plugins.yaml"
        - "--strict"
        resources:
          requests:
            memory: "500Mi"
  - name: pull-project-infra-test-robots
    run_if_changed: robots/.*
    optional: false
    decorate: true
    spec:
      nodeSelector:
        type: vm
        zone: ci
      containers:
      - image: golang:1.13
        env:
          - name: GO111MODULE
            value: "on"
          - name: XDG_CACHE_HOME
            value: "/tmp/.cache"
        command:
          - "/bin/bash"
          - "-c"
          - "cd robots && go test ./..."
  - name: pull-project-infra-test-rehearse
    run_if_changed: external-plugins/rehearse/.*
    optional: false
    decorate: true
    spec:
      nodeSelector:
        type: vm
        zone: ci
      containers:
      - image: golang:1.13
        env:
          - name: GO111MODULE
            value: "on"
          - name: XDG_CACHE_HOME
            value: "/tmp/.cache"
        command: [ "/bin/bash",  "-c" ]
        args:
          - |
            cd external-plugins/rehearse/plugin
            go test ./...
  - name: build-kubevirt-infra-bootstrap-image
    always_run: false
    run_if_changed: "images/kubevirt-infra-bootstrap/.*"
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-docker-credential: "true"
    spec:
      nodeSelector:
        type: vm
      containers:
        - image: kubevirtci/bootstrap:v20201119-a5880e0
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - "cd images && ./publish_image.sh -b kubevirt-infra-bootstrap docker.io kubevirtci"
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"
  - name: build-bootstrap-image
    always_run: false
    run_if_changed: "images/bootstrap/.*"
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-docker-credential: "true"
    spec:
      nodeSelector:
        type: vm
      containers:
        - image: kubevirtci/bootstrap:v20201119-a5880e0
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - "cd images && ./publish_image.sh -b bootstrap docker.io kubevirtci"
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"
  - name: build-kubekins-e2e-image
    always_run: false
    run_if_changed: "images/kubekins-e2e/.*"
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    spec:
      nodeSelector:
        type: vm
      containers:
        - image: kubevirtci/bootstrap:v20201119-a5880e0
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              cd images
              ./publish_image.sh -b kubekins-e2e quay.io kubevirtci
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"
  - name: build-kubevirt-userguide-image
    always_run: false
    run_if_changed: "images/kubevirt-userguide/.*"
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    spec:
      nodeSelector:
        type: vm
      containers:
        - image: kubevirtci/bootstrap:v20201119-a5880e0
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              cd images
              ./publish_image.sh -b kubevirt-userguide quay.io kubevirtci
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"
  - name: build-prow-deploy-image
    always_run: false
    run_if_changed: "images/prow-deploy/.*"
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-quay-credential: "true"
    spec:
      nodeSelector:
        type: vm
      containers:
        - image: kubevirtci/bootstrap:v20201119-a5880e0
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              cd images
              ./publish_image.sh -b prow-deploy quay.io kubevirtci
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
  - name: kubernetes-crud-ci-role
    always_run: false
    run_if_changed: "github/ci/kubernetes-crud/.*"
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-docker-mirror-proxy: "true"
      preset-kubevirtci-docker-credential: "true"
    spec:
      nodeSelector:
        type: bare-metal-external
      containers:
        - image: kubevirtci/bootstrap:v20201119-a5880e0
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              cd github/ci/kubernetes_crud/
              apt-get update && apt-get install -y python3-venv --no-install-recommends
              python3 -m venv venv
              source venv/bin/activate
              pip install wheel
              pip install -r requirements.txt
              molecule test
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "8Gi"
  - name: pull-project-infra-prow-deploy-test
    always_run: false
    run_if_changed: "github/ci/prow-deploy/.*|github/ci/prow/files/.*"
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-docker-mirror-proxy: "true"
    spec:
      nodeSelector:
        type: bare-metal-external
      securityContext:
        runAsUser: 0
      containers:
        - image: quay.io/kubevirtci/prow-deploy:v20210129-a239273
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/gcs/service-account.json
          - name: GITHUB_TOKEN
            value: /etc/github/oauth
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              set -e
              cd github/ci/prow-deploy/
              molecule test
              tmp=$(mktemp -d)
              docker cp instance:$ARTIFACTS $tmp
              cp -ar $tmp/artifacts/* $ARTIFACTS
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "29Gi"
            limits:
              memory: "29Gi"
          volumeMounts:
          - name: token
            mountPath: /etc/github
          - name: gcs
            mountPath: /etc/gcs
            readOnly: true
          - name: molecule-docker
            mountPath: /tmp/prow-deploy-molecule
      volumes:
      - name: token
        secret:
          secretName: oauth-token
      - name: gcs
        secret:
          secretName: gcs
      - name: molecule-docker
        emptyDir: {}
  - name: pull-project-infra-cert-manager-deploy-test
    optional: false
    run_if_changed: "github/ci/services/cert-manager/.*|github/ci/services/common/.*|vendor/.*|WORKSPACE"
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-docker-mirror-proxy: "true"
    spec:
      nodeSelector:
        type: bare-metal-external
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20210129-9f1d6a8
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              # install kind
              curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.9.0/kind-linux-amd64
              chmod +x ./kind && mv ./kind /usr/local/bin/kind

              # create test cluster
              kind create cluster

              ./github/ci/services/cert-manager/hack/deploy.sh testing

              bazelisk test //github/ci/services/cert-manager/e2e:go_default_test --test_output=all --test_arg=-test.v
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
            runAsUser: 0
          resources:
            requests:
              memory: "16Gi"
            limits:
              memory: "16Gi"
  - name: pull-project-infra-ci-search-deploy-test
    optional: false
    run_if_changed: "github/ci/services/ci-search/.*|github/ci/services/common/.*|vendor/.*|WORKSPACE"
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-docker-mirror-proxy: "true"
    spec:
      nodeSelector:
        type: bare-metal-external
      containers:
        - image: quay.io/kubevirtci/bootstrap:v20210129-9f1d6a8
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              # install kind
              curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.9.0/kind-linux-amd64
              chmod +x ./kind && mv ./kind /usr/local/bin/kind

              # create test cluster
              kind create cluster

              ./github/ci/services/ci-search/hack/deploy.sh testing

              bazelisk test //github/ci/services/ci-search/e2e:go_default_test --test_output=all --test_arg=-test.v
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
            runAsUser: 0
          resources:
            requests:
              memory: "16Gi"
            limits:
              memory: "16Gi"
  - name: pull-project-infra-sippy-deploy-test
    optional: false
    run_if_changed: "github/ci/services/sippy/.*|github/ci/services/common/.*|vendor/.*|WORKSPACE"
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-docker-mirror-proxy: "true"
    spec:
      nodeSelector:
        type: bare-metal-external
      containers:
        - image: kubevirtci/bootstrap:v20210112-b29dfd7
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              # install kind
              curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.9.0/kind-linux-amd64
              chmod +x ./kind && mv ./kind /usr/local/bin/kind

              # create test cluster
              kind create cluster

              ./github/ci/services/sippy/hack/deploy.sh testing

              bazelisk test //github/ci/services/sippy/e2e:go_default_test --test_output=all --test_arg=-test.v
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
            runAsUser: 0
          resources:
            requests:
              memory: "16Gi"
            limits:
              memory: "16Gi"
  - name: pull-project-infra-prometheus-stack-deploy-test
    optional: false
    run_if_changed: "github/ci/services/prometheus-stack/.*|github/ci/services/common/.*|vendor/.*|WORKSPACE"
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-docker-mirror-proxy: "true"
    spec:
      nodeSelector:
        type: bare-metal-external
      containers:
        - image: kubevirtci/bootstrap:v20210112-b29dfd7
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              # install kind
              curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.9.0/kind-linux-amd64
              chmod +x ./kind && mv ./kind /usr/local/bin/kind

              # create test cluster
              kind create cluster

              ./github/ci/services/prometheus-stack/hack/deploy.sh testing

              bazelisk test //github/ci/services/prometheus-stack/e2e:go_default_test --test_output=all --test_arg=-test.v
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
            runAsUser: 0
          resources:
            requests:
              memory: "16Gi"
            limits:
              memory: "16Gi"
  - name: pull-project-infra-kuberhealthy-deploy-test
    optional: false
    run_if_changed: "github/ci/services/kuberhealthy/.*|github/ci/services/common/.*|vendor/.*|WORKSPACE"
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-docker-mirror-proxy: "true"
    spec:
      nodeSelector:
        type: bare-metal-external
      containers:
        - image: kubevirtci/bootstrap:v20210112-b29dfd7
          command:
            - "/usr/local/bin/runner.sh"
            - "/bin/bash"
            - "-c"
            - |
              # install kind
              curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.9.0/kind-linux-amd64
              chmod +x ./kind && mv ./kind /usr/local/bin/kind

              # create test cluster
              kind create cluster

              ./github/ci/services/kuberhealthy/hack/deploy.sh testing

              bazelisk test //github/ci/services/kuberhealthy/e2e:go_default_test --test_output=all --test_arg=-test.v
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
            runAsUser: 0
          resources:
            requests:
              memory: "16Gi"
            limits:
              memory: "16Gi"
  - name: pull-project-infra-check-testgrid-config
    run_if_changed: '^(github/ci/prow/files/jobs/.*)|(github/ci/testgrid/gen-config\.yaml)$'
    decorate: true
    annotations:
      testgrid-create-test-group: "false"
    spec:
      containers:
      - image: gcr.io/k8s-prow/transfigure
        command:
        - /transfigure.sh
        args:
        - test
        - github/ci/prow/files/config.yaml
        - github/ci/prow/files/jobs
        - github/ci/testgrid/gen-config.yaml
        - kubevirt
        securityContext:
          runAsUser: 0
  - name: pull-kubevirt-org-github-config-updater
    run_if_changed: '^github/ci/prow/files/orgs\.yaml$'
    annotations:
      testgrid-create-test-group: "false"
    decorate: true
    decoration_config:
      timeout: 1h
      grace_period: 5m
    max_concurrency: 1
    spec:
      containers:
      - name: peribolos
        image: gcr.io/k8s-prow/peribolos:v20210115-603a3a062d
        command:
        - /app/prow/cmd/peribolos/app.binary
        args:
        - --github-endpoint=http://ghproxy
        - --github-endpoint=https://api.github.com
        - --config-path=github/ci/prow/files/orgs.yaml
        - --github-token-path=/etc/github/oauth
        - --fix-org=true
        - --fix-org-members=true
        - --fix-teams=true
        - --fix-team-members=true
        - --fix-team-repos=true
        - --fix-repos=true
        - --confirm=false
        volumeMounts:
        - name: token
          mountPath: /etc/github
        resources:
          requests:
            memory: "200Mi"
      volumes:
      - name: token
        secret:
          secretName: oauth-token
  - name: pull-prow-kubevirt-labels-update-precheck
    run_if_changed: '^github/ci/prow/files/labels\.yaml$'
    annotations:
      testgrid-create-test-group: "false"
    decorate: true
    decoration_config:
      timeout: 1h
      grace_period: 5m
    max_concurrency: 1
    spec:
      nodeSelector:
        type: vm
        zone: ci
      containers:
      - name: label-sync
        image: gcr.io/k8s-prow/label_sync:v20200623-9f5410055c
        command: [ "/app/label_sync/app.binary" ]
        args:
        - --config=github/ci/prow/files/labels.yaml
        - --confirm=false
        - --orgs=kubevirt
        - --token=/etc/github/oauth
        volumeMounts:
        - name: oauth
          mountPath: /etc/github
          readOnly: true
      restartPolicy: Never
      volumes:
      - name: oauth
        secret:
          secretName: oauth-token
  - name: pull-prow-nmstate-labels-update-precheck
    run_if_changed: '^github/ci/prow/files/labels\.yaml$'
    annotations:
      testgrid-create-test-group: "false"
    decorate: true
    decoration_config:
      timeout: 1h
      grace_period: 5m
    max_concurrency: 1
    spec:
      nodeSelector:
        type: vm
        zone: ci
      containers:
      - name: label-sync
        image: gcr.io/k8s-prow/label_sync:v20200623-9f5410055c
        command: [ "/app/label_sync/app.binary" ]
        args:
        - --config=github/ci/prow/files/labels.yaml
        - --confirm=false
        - --only=nmstate/kubernetes-nmstate
        - --token=/etc/github/oauth
        volumeMounts:
        - name: oauth
          mountPath: /etc/github
          readOnly: true
      restartPolicy: Never
      volumes:
      - name: oauth
        secret:
          secretName: oauth-token
