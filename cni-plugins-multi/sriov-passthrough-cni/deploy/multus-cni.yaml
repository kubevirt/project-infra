---
apiVersion: v1
kind: Namespace
metadata:
  name: multus-cni-ns
  labels:
    name: multus-cni-ns
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: network-attachment-definitions.k8s.cni.cncf.io
spec:
  group: k8s.cni.cncf.io
  version: v1
  names:
    plural: network-attachment-definitions
    singular: network-attachment-definition
    kind: NetworkAttachmentDefinition
    shortNames:
    - net-attach-def
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            config:
              type: string
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: multus
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '*'
    verbs:
      - '*'
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: multus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: multus
subjects:
- kind: ServiceAccount
  name: multus
  namespace: multus-cni-ns
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: multus
  namespace: multus-cni-ns
---
kind: SecurityContextConstraints
apiVersion: v1
metadata:
  name: scc-admin
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
allowHostDirVolumePlugin: true
allowHostIPC: true
allowHostNetwork: true
allowHostPID: true
allowHostPorts: true
allowPrivilegedContainer: true
users:
  - system:serviceaccount:multus-cni-ns:multus
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: multus-cni-config
  namespace: multus-cni-ns
  labels:
    tier: node
    app: multus
data:
  00-multus.conf: |
    {
      "name": "multus-cni",
      "type": "multus",
      "delegates": [{
        "type": "openshift-sdn",
        "name": "openshift.1",
        "masterplugin": true
      }],
      "kubeconfig": "/etc/cni/net.d/multus.d/multus.kubeconfig",
      "logFile": "/var/log/multus.log",
      "logLevel": "debug"
    }
---
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: sriov-passthrough-cni
spec:
  config: |
    {
      "cniVersion": "0.3.0",
      "type": "sriov-passthrough-cni"
    }
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: multus-cni
  namespace: multus-cni-ns
  labels:
    tier: node
    app: multus
spec:
  template:
    metadata:
      labels:
        tier: node
        app: multus
    spec:
      hostNetwork: true
      serviceAccountName: multus
      nodeSelector:
        sriov-nic: 'true'
      containers:
        - name: kube-multus
          command: ["/entrypoint.sh"]
          args: ["--multus-conf-file=/usr/src/multus-cni/images/00-multus.conf"]
          image: 'docker.io/nfvpe/multus:v3.1'
          resources:
            requests:
              cpu: "100m"
              memory: "50Mi"
            limits:
              cpu: "100m"
              memory: "50Mi"
          securityContext:
            privileged: true
          volumeMounts:
            - name: cni
              mountPath: /host/etc/cni/net.d
            - name: cnibin
              mountPath: /host/opt/cni/bin
            - name: multus-cfg
              mountPath: /usr/src/multus-cni/images/
        - name: kube-sriov-passthrough-cni
          command: ["install-plugin"]
          args: ["/host/opt/cni/bin", "/host/etc/cni/net.d"]
          image: 'quay.io/pod_utils/sriov-passthrough-cni:v1.0'
          resources:
            requests:
              cpu: "100m"
              memory: "50Mi"
            limits:
              cpu: "100m"
              memory: "50Mi"
          securityContext:
            privileged: true
          volumeMounts:
            - name: cni
              mountPath: /host/etc/cni/net.d
            - name: cnibin
              mountPath: /host/opt/cni/bin
      volumes:
        - name: cni
          hostPath:
            path: /etc/cni/net.d
        - name: cnibin
          hostPath:
            path: /opt/cni/bin
        - name: multus-cfg
          configMap:
            name: multus-cni-config
